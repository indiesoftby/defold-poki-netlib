{"mappings":"C,A,W,I,E,A,a,O,W,W,A,a,O,K,K,A,a,O,O,O,A,a,O,O,O,C,E,S,E,C,C,C,C,C,C,C,E,O,c,C,E,E,C,I,E,I,E,W,C,E,a,C,C,E,C,I,E,C,EIAA,SAAS,EAAiB,CAAG,CAAE,CAAG,CAAE,CAAK,EAKrC,OAJI,KAAO,EACP,OAAO,cAAc,CAAC,EAAK,EAAK,CAAE,MAAO,EAAO,WAAY,CAAA,EAAM,aAAc,CAAA,EAAM,SAAU,CAAA,CAAK,GAClG,CAAG,CAAC,EAAI,CAAG,EAEX,CACX,C,E,E,sB,W,O,C,G,E,E,0B,W,O,C,G,E,E,sB,W,O,C,G,E,E,U,W,O,C,GDFO,IAAM,EAAgB,wBAEd,OAAM,EASnB,MAAM,gBAAiB,CAAyB,CAA6B,KAWvD,EAAA,EAVpB,IAAM,EAAS,KAAK,KAAK,CAAC,KAAK,SAAS,CAAC,IAMzC,GAA4B,KAAA,IAAxB,EAAO,YAAY,EAKnB,CADgB,CAAA,AAAyE,OAAzE,CAAA,EAAA,AAAiB,OAAjB,CAAA,EAAA,EAAO,UAAU,AAAV,GAAP,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAmB,IAAI,CAAC,AAAA,GAAK,EAAE,IAAI,GAAK,GAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAA,GAAzE,AAAA,KAAA,IAAA,GAAA,CAApB,GACoB,AAAsB,KAAA,IAAtB,EAAO,UAAU,CAJnC,OAAO,CAOmB,MAAA,IAAxB,IAAI,CAAC,cAAc,EACrB,CAAA,IAAI,CAAC,cAAc,CAAG,IAAI,QAA2B,AAAC,IACpD,GAAI,AAA0B,MAA1B,IAAI,CAAC,iBAAiB,EAAY,IAAI,CAAC,yBAAyB,CAAG,YAAY,GAAG,GAAI,CACxF,EAAQ,IAAI,CAAC,iBAAiB,EAC9B,MACF,CACK,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAC1B,KAAM,aACR,GAAG,IAAI,CAAC,AAAA,IACN,GAAI,AAAqB,gBAArB,EAAY,IAAI,CAAoB,KAEkB,CADxD,CAAA,IAAI,CAAC,iBAAiB,CAAG,EACzB,IAAI,CAAC,yBAAyB,CAAG,YAAY,GAAG,GAAO,AAAC,CAAA,AAAA,CAAA,AAAoB,OAApB,CAAA,EAAA,EAAY,QAAQ,AAAR,GAAZ,AAAA,KAAA,IAAA,EAAA,EAAwB,CAAA,EAAK,EAAA,EAAM,IAC3F,EAAQ,EACV,CACF,GAAG,KAAK,CAAC,KACP,EAAQ,CAAE,KAAM,aAAc,GAC9B,IAAI,CAAC,iBAAiB,CAAG,CAAE,KAAM,aAAc,EAC/C,IAAI,CAAC,yBAAyB,CAAG,YAAY,GAAG,GA5CrC,GA6Cb,GACA,WAAW,KACT,EAAQ,CAAE,KAAM,aAAc,GAC9B,IAAI,CAAC,iBAAiB,CAAG,CAAE,KAAM,aAAc,EAC/C,IAAI,CAAC,yBAAyB,CAAG,YAAY,GAAG,GAjDrC,GAkDb,EAlDa,IAmDf,EAAA,EAEF,IAAM,EAAc,MAAM,IAAI,CAAC,cAAc,QAC7C,IAAI,CAAC,cAAc,CAAG,KAAA,EAEE,KAAA,IAApB,EAAY,GAAG,EAInB,EAAO,UAAU,CAAC,OAAO,CAAC,AAAA,IACxB,GAAI,EAAE,IAAI,GAAK,GAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,GAAgB,CACrD,IAAA,CAAT,CAAA,EAAE,IAAI,CAAG,AAAe,OAAf,CAAA,EAAA,EAAY,GAAG,AAAH,GAAZ,AAAA,KAAA,IAAA,EAAA,EAAmB,GAC5B,EAAE,QAAQ,CAAG,EAAY,QAAQ,CACjC,EAAE,UAAU,CAAG,EAAY,UAAU,AACvC,CACF,GATS,CAWX,CA3DA,YAAoB,CAAoB,CAAE,C,A,E,I,C,Y,K,GAL1C,AAAA,EAAA,IAAA,CAAQ,oBAAR,KAAA,GACA,AAAA,EAAA,IAAA,CAAQ,4BAAR,KAAA,GAEA,AAAA,EAAA,IAAA,CAAQ,iBAAR,KAAA,GAEoB,IAAA,CAAA,SAAA,CAAA,EAJZ,IAAA,CAAA,yBAAA,CAAoC,CAK5C,CA2DF,CGtEA,SAAS,EAAe,CAAM,EAC1B,IAAK,IAAI,EAAI,EAAG,EAAI,UAAU,MAAM,CAAE,IAAK,CACvC,IAAI,EAAS,AAAgB,MAAhB,SAAS,CAAC,EAAE,CAAW,SAAS,CAAC,EAAE,CAAG,CAAC,EAChD,EAAU,OAAO,IAAI,CAAC,EAEkB,CAAA,YAAxC,OAAO,OAAO,qBAAqB,EACnC,CAAA,EAAU,EAAQ,MAAM,CACpB,OAAO,qBAAqB,CAAC,GAAQ,MAAM,CAAC,SAAS,CAAG,EACpD,OAAO,OAAO,wBAAwB,CAAC,EAAQ,GAAK,UAAU,AAClE,GAAA,EAIR,EAAQ,OAAO,CAAC,SAAS,CAAG,EACxB,AAAA,EAAiB,EAAQ,EAAK,CAAM,CAAC,EAAI,CAC7C,EACJ,CAEA,OAAO,CACX,C,I,E,C,ECnBI,EAAM,OAAO,SAAS,CAAC,cAAc,CACrC,EAAS,IASb,SAAS,IAAU,CA4BnB,SAAS,EAAG,CAAE,CAAE,CAAO,CAAE,CAAI,EAC3B,IAAI,CAAC,EAAE,CAAG,EACV,IAAI,CAAC,OAAO,CAAG,EACf,IAAI,CAAC,IAAI,CAAG,GAAQ,CAAA,CACtB,CAaA,SAAS,EAAY,CAAO,CAAE,CAAK,CAAE,CAAE,CAAE,CAAO,CAAE,CAAI,EACpD,GAAI,AAAc,YAAd,OAAO,EACT,MAAM,AAAI,UAAU,mCAGtB,IAAI,EAAW,IAAI,EAAG,EAAI,GAAW,EAAS,GAC1C,EAAM,EAAS,EAAS,EAAQ,EAMpC,OAJK,EAAQ,OAAO,CAAC,EAAI,CACf,EAAQ,OAAO,CAAC,EAAI,CAAC,EAAE,CAC5B,EAAQ,OAAO,CAAC,EAAI,CAAG,CAAC,EAAQ,OAAO,CAAC,EAAI,CAAE,EAAS,CADzB,EAAQ,OAAO,CAAC,EAAI,CAAC,IAAI,CAAC,GADlC,CAAA,EAAQ,OAAO,CAAC,EAAI,CAAG,EAAU,EAAQ,YAAY,EAAhF,EAIO,CACT,CASA,SAAS,EAAW,CAAO,CAAE,CAAG,EAC1B,AAA2B,GAA3B,EAAE,EAAQ,YAAY,CAAQ,EAAQ,OAAO,CAAG,IAAI,EACnD,OAAO,EAAQ,OAAO,CAAC,EAAI,AAClC,CASA,SAAS,IACP,IAAI,CAAC,OAAO,CAAG,IAAI,EACnB,IAAI,CAAC,YAAY,CAAG,CACtB,CAzEI,OAAO,MAAM,GACf,EAAO,SAAS,CAAG,OAAO,MAAM,CAAC,MAM5B,IAAI,IAAS,SAAS,EAAE,CAAA,EAAS,CAAA,CAAtC,GA2EF,EAAa,SAAS,CAAC,UAAU,CAAG,WAClC,IACI,EACA,EAFA,EAAQ,EAAE,CAId,GAAI,AAAsB,IAAtB,IAAI,CAAC,YAAY,CAAQ,OAAO,EAEpC,IAAK,KAAS,EAAS,IAAI,CAAC,OAAO,CAC7B,EAAI,IAAI,CAAC,EAAQ,IAAO,EAAM,IAAI,CAAC,EAAS,EAAK,KAAK,CAAC,GAAK,UAGlE,AAAI,OAAO,qBAAqB,CACvB,EAAM,MAAM,CAAC,OAAO,qBAAqB,CAAC,IAG5C,CACT,EASA,EAAa,SAAS,CAAC,SAAS,CAAG,SAAmB,CAAK,EACzD,IAAI,EAAM,EAAS,EAAS,EAAQ,EAChC,EAAW,IAAI,CAAC,OAAO,CAAC,EAAI,CAEhC,GAAI,CAAC,EAAU,MAAO,EAAE,CACxB,GAAI,EAAS,EAAE,CAAE,MAAO,CAAC,EAAS,EAAE,CAAC,CAErC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAS,MAAM,CAAE,EAAK,AAAI,MAAM,GAAI,EAAI,EAAG,IAC7D,CAAE,CAAC,EAAE,CAAG,CAAQ,CAAC,EAAE,CAAC,EAAE,CAGxB,OAAO,CACT,EASA,EAAa,SAAS,CAAC,aAAa,CAAG,SAAuB,CAAK,EACjE,IAAI,EAAM,EAAS,EAAS,EAAQ,EAChC,EAAY,IAAI,CAAC,OAAO,CAAC,EAAI,QAEjC,AAAK,EACD,EAAU,EAAE,CAAS,EAClB,EAAU,MAAM,CAFA,CAGzB,EASA,EAAa,SAAS,CAAC,IAAI,CAAG,SAAc,CAAK,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,CAAE,EACnE,IAAI,EAAM,EAAS,EAAS,EAAQ,EAEpC,GAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAI,CAAE,MAAO,CAAA,EAE/B,IAEI,EACA,EAHA,EAAY,IAAI,CAAC,OAAO,CAAC,EAAI,CAC7B,EAAM,UAAU,MAAM,CAI1B,GAAI,EAAU,EAAE,CAAE,CAGhB,OAFI,EAAU,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,EAAO,EAAU,EAAE,CAAE,KAAA,EAAW,CAAA,GAEhE,GACN,KAAK,EAAG,OAAO,EAAU,EAAE,CAAC,IAAI,CAAC,EAAU,OAAO,EAAG,CAAA,CACrD,MAAK,EAAG,OAAO,EAAU,EAAE,CAAC,IAAI,CAAC,EAAU,OAAO,CAAE,GAAK,CAAA,CACzD,MAAK,EAAG,OAAO,EAAU,EAAE,CAAC,IAAI,CAAC,EAAU,OAAO,CAAE,EAAI,GAAK,CAAA,CAC7D,MAAK,EAAG,OAAO,EAAU,EAAE,CAAC,IAAI,CAAC,EAAU,OAAO,CAAE,EAAI,EAAI,GAAK,CAAA,CACjE,MAAK,EAAG,OAAO,EAAU,EAAE,CAAC,IAAI,CAAC,EAAU,OAAO,CAAE,EAAI,EAAI,EAAI,GAAK,CAAA,CACrE,MAAK,EAAG,OAAO,EAAU,EAAE,CAAC,IAAI,CAAC,EAAU,OAAO,CAAE,EAAI,EAAI,EAAI,EAAI,GAAK,CAAA,CAC3E,CAEA,IAAK,EAAI,EAAG,EAAO,AAAI,MAAM,EAAK,GAAI,EAAI,EAAK,IAC7C,CAAI,CAAC,EAAI,EAAE,CAAG,SAAS,CAAC,EAAE,CAG5B,EAAU,EAAE,CAAC,KAAK,CAAC,EAAU,OAAO,CAAE,EACxC,KAAO,CACL,IACI,EADA,EAAS,EAAU,MAAM,CAG7B,IAAK,EAAI,EAAG,EAAI,EAAQ,IAGtB,OAFI,CAAS,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,cAAc,CAAC,EAAO,CAAS,CAAC,EAAE,CAAC,EAAE,CAAE,KAAA,EAAW,CAAA,GAEtE,GACN,KAAK,EAAG,CAAS,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAS,CAAC,EAAE,CAAC,OAAO,EAAG,KACpD,MAAK,EAAG,CAAS,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAS,CAAC,EAAE,CAAC,OAAO,CAAE,GAAK,KACxD,MAAK,EAAG,CAAS,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAS,CAAC,EAAE,CAAC,OAAO,CAAE,EAAI,GAAK,KAC5D,MAAK,EAAG,CAAS,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,CAAS,CAAC,EAAE,CAAC,OAAO,CAAE,EAAI,EAAI,GAAK,KAChE,SACE,GAAI,CAAC,EAAM,IAAK,EAAI,EAAG,EAAO,AAAI,MAAM,EAAK,GAAI,EAAI,EAAK,IACxD,CAAI,CAAC,EAAI,EAAE,CAAG,SAAS,CAAC,EAAE,CAG5B,CAAS,CAAC,EAAE,CAAC,EAAE,CAAC,KAAK,CAAC,CAAS,CAAC,EAAE,CAAC,OAAO,CAAE,EAChD,CAEJ,CAEA,MAAO,CAAA,CACT,EAWA,EAAa,SAAS,CAAC,EAAE,CAAG,SAAY,CAAK,CAAE,CAAE,CAAE,CAAO,EACxD,OAAO,EAAY,IAAI,CAAE,EAAO,EAAI,EAAS,CAAA,EAC/C,EAWA,EAAa,SAAS,CAAC,IAAI,CAAG,SAAc,CAAK,CAAE,CAAE,CAAE,CAAO,EAC5D,OAAO,EAAY,IAAI,CAAE,EAAO,EAAI,EAAS,CAAA,EAC/C,EAYA,EAAa,SAAS,CAAC,cAAc,CAAG,SAAwB,CAAK,CAAE,CAAE,CAAE,CAAO,CAAE,CAAI,EACtF,IAAI,EAAM,EAAS,EAAS,EAAQ,EAEpC,GAAI,CAAC,IAAI,CAAC,OAAO,CAAC,EAAI,CAAE,OAAO,IAAI,CACnC,GAAI,CAAC,EAEH,OADA,EAAW,IAAI,CAAE,GACV,IAAI,CAGb,IAAI,EAAY,IAAI,CAAC,OAAO,CAAC,EAAI,CAEjC,GAAI,EAAU,EAAE,CAEZ,EAAU,EAAE,GAAK,GAChB,AAAC,IAAQ,EAAU,IAAG,EACtB,AAAC,GAAW,EAAU,OAAO,GAAK,GAEnC,EAAW,IAAI,CAAE,OAEd,CACL,IAAK,IAAI,EAAI,EAAG,EAAS,EAAE,CAAE,EAAS,EAAU,MAAM,CAAE,EAAI,EAAQ,IAEhE,CAAA,CAAS,CAAC,EAAE,CAAC,EAAE,GAAK,GACnB,GAAQ,CAAC,CAAS,CAAC,EAAE,CAAC,IAAI,EAC1B,GAAW,CAAS,CAAC,EAAE,CAAC,OAAO,GAAK,CAAA,GAErC,EAAO,IAAI,CAAC,CAAS,CAAC,EAAE,CAOxB,CAAA,EAAO,MAAM,CAAE,IAAI,CAAC,OAAO,CAAC,EAAI,CAAG,AAAkB,IAAlB,EAAO,MAAM,CAAS,CAAM,CAAC,EAAE,CAAG,EACpE,EAAW,IAAI,CAAE,EACxB,CAEA,OAAO,IAAI,AACb,EASA,EAAa,SAAS,CAAC,kBAAkB,CAAG,SAA4B,CAAK,EAC3E,IAAI,EAUJ,OARI,GACF,EAAM,EAAS,EAAS,EAAQ,EAC5B,IAAI,CAAC,OAAO,CAAC,EAAI,EAAE,EAAW,IAAI,CAAE,KAExC,IAAI,CAAC,OAAO,CAAG,IAAI,EACnB,IAAI,CAAC,YAAY,CAAG,GAGf,IAAI,AACb,EAKA,EAAa,SAAS,CAAC,GAAG,CAAG,EAAa,SAAS,CAAC,cAAc,CAClE,EAAa,SAAS,CAAC,WAAW,CAAG,EAAa,SAAS,CAAC,EAAE,CAK9D,EAAa,QAAQ,CAAG,EAKxB,EAAa,YAAY,CAAG,EAM1B,EAAiB,CCrUJ,OAAM,UAAkB,EAAA,YAAW,CA4BxC,SAAsB,CAC5B,IAAM,EAAK,IAAI,UAAU,IAAI,CAAC,GAAG,EAC3B,EAAS,KACb,IAAI,CAAC,gBAAgB,CAAG,EACxB,IAAI,CAAC,YAAY,CAAG,CAAA,EACpB,IAAI,CAAC,IAAI,CAAC,CACR,KAAM,QACN,KAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CACzB,GAAI,IAAI,CAAC,UAAU,CACnB,OAAQ,IAAI,CAAC,cAAc,AAC7B,EACF,EACM,EAAU,AAAC,IACf,IAAM,EAAQ,IAAI,EAAe,eAAgB,6BAA8B,GAC/E,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAC3B,EAAG,UAAU,GAAK,UAAU,MAAM,GACpC,IAAI,CAAC,YAAY,CAAG,CAAA,EACpB,EAAG,mBAAmB,CAAC,OAAQ,GAC/B,EAAG,mBAAmB,CAAC,QAAS,GAChC,EAAG,mBAAmB,CAAC,UAAW,GAClC,EAAG,mBAAmB,CAAC,QAAS,GAKhC,WAAW,KACT,IAAI,CAAC,SAAS,EAChB,EAAG,KAEP,EACM,EAAY,AAAC,IACjB,IAAI,CAAC,sBAAsB,CAAC,EAAG,IAAI,EAAE,KAAK,CAAC,AAAA,IAAM,EACnD,EACM,EAAU,KACd,GAAI,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAE,CACzB,IAAM,EAAQ,IAAI,EAAe,eAAgB,2BACjD,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACjC,CACA,EAAG,mBAAmB,CAAC,OAAQ,GAC/B,EAAG,mBAAmB,CAAC,QAAS,GAChC,EAAG,mBAAmB,CAAC,UAAW,GAClC,EAAG,mBAAmB,CAAC,QAAS,GAKhC,WAAW,KACT,IAAI,CAAC,SAAS,EAChB,EAAG,IACL,EAKA,OAJA,EAAG,gBAAgB,CAAC,OAAQ,GAC5B,EAAG,gBAAgB,CAAC,QAAS,GAC7B,EAAG,gBAAgB,CAAC,UAAW,GAC/B,EAAG,gBAAgB,CAAC,QAAS,GACtB,CACT,CAEQ,WAAmB,CACzB,GAAI,CAAA,IAAI,CAAC,YAAY,GAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAS7C,GALA,IAAI,CAAC,KAAK,GAEV,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,AAAC,GAAM,EAAE,MAAM,CAAC,IAAI,EAAe,eAAgB,6BACzE,IAAI,CAAC,QAAQ,CAAC,KAAK,GAEf,IAAI,CAAC,gBAAgB,CAAG,GAAI,CAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAClB,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,EAAe,eAAgB,kDAClE,MACF,CACK,IAAI,CAAC,KAAK,CAAC,YAAa,qBAC7B,IAAI,CAAC,YAAY,CAAG,CAAA,EACpB,WAAW,KACT,IAAI,CAAC,EAAE,CAAG,IAAI,CAAC,OAAO,EACxB,EAAG,AAAgB,IAAhB,KAAK,MAAM,GAAW,IAAI,CAAC,gBAAgB,EAC9C,IAAI,CAAC,gBAAgB,EAAI,EAC3B,CAEA,OAAe,CACb,IAAI,CAAC,EAAE,CAAC,KAAK,EACf,CAEA,MAAM,QAAS,CAA4B,CAAiC,CAC1E,OAAO,MAAM,IAAI,QAA8B,CAAC,EAAS,KACnD,IAAI,CAAC,EAAE,CAAC,UAAU,GAAK,UAAU,IAAI,EACvC,EAAO,IAAI,EAAe,eAAgB,8BAE5C,IAAM,EAAM,KAAK,MAAM,GAAG,QAAQ,CAAC,IAAI,KAAK,CAAC,EAC7C,CAAA,EAAO,GAAG,CAAG,EACb,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,+BAAgC,EAAO,IAAI,EAC5D,IAAM,EAAO,KAAK,SAAS,CAAC,GAC5B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,GACb,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAK,CAAE,QAAA,EAAS,OAAA,CAAO,EAC3C,EACF,CAEA,KAAM,CAA4B,CAAQ,CACxC,GAAI,IAAI,CAAC,EAAE,CAAC,UAAU,GAAK,UAAU,IAAI,CAAE,CACzC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,4BAA6B,EAAO,IAAI,EACzD,IAAM,EAAO,KAAK,SAAS,CAAC,GAC5B,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,EACf,CACF,CAEA,MAAc,uBAAwB,CAAY,CAAiB,CACjE,GAAI,KAmB+C,EAC9B,EAGT,EAkEE,EADQ,EAOd,EAOM,EAEQ,EAvGpB,IAAM,EAAS,KAAK,KAAK,CAAC,GAE1B,GADA,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,6BAA8B,EAAO,IAAI,EACtD,AAAe,KAAA,IAAf,EAAO,GAAG,CAAgB,CAC5B,IAAM,EAAU,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAO,GAAG,CAC7B,OAAX,IACF,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAO,GAAG,EAC3B,AAAgB,UAAhB,EAAO,IAAI,CACb,EAAQ,MAAM,CAAC,IAAI,EAAe,eAAgB,EAAO,OAAO,CAAE,KAAA,EAAW,EAAO,IAAI,GAExF,EAAQ,OAAO,CAAC,GAGtB,CACA,OAAQ,EAAO,IAAI,EACjB,IAAK,QACH,CACE,IAAM,EAAQ,IAAI,EAAe,eAAgB,EAAO,OAAO,CAAE,KAAA,EAAW,EAAO,IAAI,EAEvF,GADA,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,GAC3B,AAAgB,sBAAhB,EAAO,IAAI,EAA4B,AAAA,CAAA,AAAY,OAAZ,CAAA,EAAA,EAAO,KAAK,AAAL,GAAP,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAc,SAAS,AAAT,IAAc,KAAA,EAAW,CAChF,IAAM,EAAA,AAAiB,OAAZ,CAAA,EAAA,EAAO,KAAK,AAAL,GAAP,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAc,SAAS,CAC9B,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KACvB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,gCAAiC,GAClD,AAAqB,OAArB,CAAA,EAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAA,GAArB,AAAA,KAAA,IAAA,GAAA,EAA0B,KAAK,CAAC,qBAEpC,KAA2B,qBAAhB,EAAO,IAAI,EACpB,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,mBAEvB,CACA,KAEF,KAAK,UACH,GAAI,AAAoB,KAAA,IAApB,IAAI,CAAC,UAAU,CAAgB,CACjC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,yBACjB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,wBAClB,MACF,CACA,GAAI,AAAc,KAAd,EAAO,EAAE,CACX,MAAM,AAAI,MAAM,wCAElB,CAAA,IAAI,CAAC,UAAU,CAAG,EAAO,EAAE,CAC3B,IAAI,CAAC,cAAc,CAAG,EAAO,MAAM,CACnC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAClB,IAAI,CAAC,OAAO,CAAC,wBAAwB,GACrC,KAEF,KAAK,SACH,CACE,IAAM,EAAO,EAAO,SAAS,CAAC,IAAI,CAClC,GAAI,AAAS,KAAT,EACF,MAAM,AAAI,MAAM,2CAElB,CAAA,IAAI,CAAC,YAAY,CAAG,EACpB,IAAI,CAAC,aAAa,CAAG,EAAO,SAAS,CAAC,MAAM,CAC5C,IAAI,CAAC,WAAW,CAAG,EAAO,SAAS,CAAC,IAAI,CACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,QAAS,EAAM,EAAO,SAAS,EACtB,KAAA,IAAvB,IAAI,CAAC,aAAa,EACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAU,IAAI,CAAC,aAAa,CAElD,CACA,KAEF,KAAK,SACH,GAAI,AAAsB,KAAA,IAAtB,IAAI,CAAC,YAAY,CAEnB,MAEE,CAAA,EAAO,IAAI,CAAG,IAAI,CAAC,WAAW,GAChC,IAAI,CAAC,aAAa,CAAG,EAAO,MAAM,CAClC,IAAI,CAAC,WAAW,CAAG,EAAO,IAAI,CAC9B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,SAAU,EAAO,MAAM,GAE3C,KAEF,KAAK,eACH,GAAI,AAAsB,KAAA,IAAtB,IAAI,CAAC,YAAY,CAEnB,MAEF,CAAA,IAAI,CAAC,gBAAgB,CAAG,EAAO,SAAS,CACxC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAgB,EAAO,SAAS,CAAC,IAAI,CAAE,EAAO,SAAS,EACzE,KAEF,KAAK,UACH,GAAI,IAAI,CAAC,UAAU,GAAK,EAAO,EAAE,CAC/B,OAGF,IAAK,IAAM,KADX,MAAM,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,EAAO,EAAE,CAAE,EAAO,MAAM,EACpC,AAA8B,OAA9B,CAAA,EAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAO,EAAE,CAAA,GAA9B,AAAA,KAAA,IAAA,EAAA,EAAmC,EAAE,EACnD,MAAA,CAAA,AAAoC,OAA9B,CAAA,EAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAO,EAAE,CAAA,GAA9B,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAiC,mBAAmB,CAAC,EAD7D,EAGA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,EAAO,EAAE,EACjC,KACF,KAAK,aACC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAO,EAAE,GAAA,CAAA,AACF,OAA9B,CAAA,EAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAO,EAAE,CAAA,GAA9B,AAAA,KAAA,IAAA,GAAA,EAAiC,KAAK,EADxC,EAGA,KAEF,KAAK,YACL,IAAK,cACH,GAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAO,MAAM,EACpC,MAAA,CAAA,AAAwC,OAAlC,CAAA,EAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAO,MAAM,CAAA,GAAlC,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAqC,mBAAmB,CAAC,EADjE,MAEO,CACL,IAAM,EAAQ,AAAkC,OAAlC,CAAA,EAAA,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAO,MAAM,CAAA,GAAlC,AAAA,KAAA,IAAA,EAAA,EAAuC,EAAE,CACvD,EAAM,IAAI,CAAC,GACX,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,EAAO,MAAM,CAAE,EACtC,CACA,KACF,KAAK,cACH,IAAI,CAAC,IAAI,CAAC,cAAe,EAI7B,CACF,CAAE,MAAO,EAAG,CACV,IAAM,EAAQ,IAAI,EAAe,gBAAiB,GAClD,IAAI,CAAC,OAAO,CAAC,iBAAiB,CAAC,EACjC,CACF,CAEA,MAAM,MAAO,CAAgB,CAAE,CAAc,CAAE,CAAgC,CAAiB,CAC9F,OAAO,MAAM,IAAI,QAAQ,AAAA,IACvB,WAAW,KACT,IAAI,CAAC,IAAI,CAAC,CACR,KAAM,QACN,KAAM,IAAI,CAAC,OAAO,CAAC,MAAM,CACzB,MAAO,IAAI,CAAC,YAAY,CACxB,KAAM,IAAI,CAAC,OAAO,CAAC,EAAE,CACrB,SAAA,EACA,OAAA,EACA,KAAA,CACF,GACA,GACF,EAAG,EACL,EACF,CA7PA,YAA8B,CAAgB,CAAE,CAAwB,CAAE,CAAW,CAAE,CACrF,KAAK,G,A,E,I,C,U,K,GAlBP,AAAA,EAAA,IAAA,CAAiB,MAAjB,KAAA,GACA,AAAA,EAAA,IAAA,CAAQ,KAAR,KAAA,GACA,AAAA,EAAA,IAAA,CAAQ,mBAAR,KAAA,GACA,AAAA,EAAA,IAAA,CAAQ,eAAR,KAAA,GACA,AAAA,EAAA,IAAA,CAAA,aAAA,KAAA,GACA,AAAA,EAAA,IAAA,CAAA,iBAAA,KAAA,GACA,AAAA,EAAA,IAAA,CAAA,eAAA,KAAA,GACA,AAAA,EAAA,IAAA,CAAA,mBAAA,KAAA,GACA,AAAA,EAAA,IAAA,CAAA,gBAAA,KAAA,GACA,AAAA,EAAA,IAAA,CAAA,cAAA,KAAA,GAEA,AAAA,EAAA,IAAA,CAAiB,cAAjB,KAAA,GAEA,AAAA,EAAA,IAAA,CAAiB,cAAjB,KAAA,GAEA,AAAA,EAAA,IAAA,CAAiB,WAAjB,KAAA,GAE8B,IAAA,CAAA,OAAA,CAAA,EAftB,IAAA,CAAA,gBAAA,CAA2B,EAC3B,IAAA,CAAA,YAAA,CAAwB,CAAA,EAMhC,IAAA,CAAA,WAAA,CAAsB,EAML,IAAA,CAAA,QAAA,CAAwC,IAAI,IAK3D,IAAI,CAAC,GAAG,CAAG,EACX,IAAI,CAAC,WAAW,CAAG,EACnB,IAAI,CAAC,WAAW,CAAG,IAAI,IAEvB,IAAI,CAAC,EAAE,CAAG,IAAI,CAAC,OAAO,EACxB,CAsPF,CAOO,MAAM,EAOJ,UAAoB,CACzB,MAAO,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,AAC1C,CALA,YAAoB,CAAuD,CAAE,CAAsB,CAAS,CAAa,CAAE,CAAoB,CAAE,C,A,E,I,C,O,K,G,A,E,I,C,U,K,G,A,E,I,C,Q,K,G,A,E,I,C,O,K,GAA7H,IAAA,CAAA,IAAA,CAAA,EAAgE,IAAA,CAAA,OAAA,CAAA,EAAwB,IAAA,CAAA,KAAA,CAAA,EAAsB,IAAA,CAAA,IAAA,CAAA,CAClI,CAKF,CGrSA,IAAM,EAAO,OACP,EAAO,MAEE,OAAM,EAqBX,MAAc,CAEhB,IAAA,EACF,CAFF,CAAA,IAAI,CAAC,cAAc,CAAG,YAAY,GAAG,GACjC,CAAA,AAAY,OAAZ,CAAA,EAAA,IAAI,CAAC,OAAO,AAAP,GAAL,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAc,UAAU,AAAV,IAAe,QAAA,CAAA,AACnB,OAAZ,CAAA,EAAA,IAAI,CAAC,OAAO,AAAP,GAAL,AAAA,KAAA,IAAA,GAAA,EAAc,IAAI,CAAC,EADrB,CAGF,CAEQ,UAAW,CAAY,CAAQ,CACrC,GAAI,IAAS,EAAM,CACb,IAAA,EACF,EADE,CAAA,AAAY,OAAZ,CAAA,EAAA,IAAI,CAAC,OAAO,AAAP,GAAL,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAc,UAAU,AAAV,IAAe,QAAA,CAAA,AACnB,OAAZ,CAAA,EAAA,IAAI,CAAC,OAAO,AAAP,GAAL,AAAA,KAAA,IAAA,GAAA,EAAc,IAAI,CAAC,EADrB,EAGA,MACF,CACA,GAAI,IAAS,EACX,OAIF,IAAM,EAAQ,AADF,YAAY,GAAG,GACP,IAAI,CAAC,cAAc,CAEvC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,GAChB,IAAI,CAAC,MAAM,CAAC,MAAM,CAhDD,IAiDnB,IAAI,CAAC,MAAM,CAAC,GAAG,GAGjB,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,GAAG,CAAG,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,EAClC,IAAI,CAAC,GAAG,CAAG,KAAK,GAAG,IAAI,IAAI,CAAC,MAAM,EAElC,IAAI,CAAC,OAAO,CAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,EAAG,IAAM,EAAI,EAAG,GAAK,IAAI,CAAC,MAAM,CAAC,MAAM,CAEtE,IAAI,CAAC,MAAM,CAAC,MAAM,CAAG,GACvB,CAAA,IAAI,CAAC,MAAM,CAAG,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,EAAG,IAAM,KAAK,GAAG,CAAC,EAAI,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,CAAC,EAAG,IAAM,EAAI,EAAG,GAAM,CAAA,IAAI,CAAC,MAAM,CAAC,MAAM,CAAG,CAAA,CAAA,EAGpI,WAAW,IAAM,IAAI,CAAC,IAAI,GAAI,AA/Db,IA+D4B,EAC/C,CA7CA,YAAa,CAA2B,CAAmB,CAAwB,CAAE,C,A,E,I,C,O,K,G,A,E,I,C,U,K,GAZrF,AAAA,EAAA,IAAA,CAAiB,SAAjB,KAAA,GACA,AAAA,EAAA,IAAA,CAAQ,iBAAR,KAAA,GAEA,AAAA,EAAA,IAAA,CAAO,OAAP,KAAA,GACA,AAAA,EAAA,IAAA,CAAO,UAAP,KAAA,GACA,AAAA,EAAA,IAAA,CAAO,SAAP,KAAA,GACA,AAAA,EAAA,IAAA,CAAO,MAAP,KAAA,GACA,AAAA,EAAA,IAAA,CAAO,MAAP,KAAA,GAK8B,IAAA,CAAA,IAAA,CAAA,EAA6B,IAAA,CAAA,OAAA,CAAA,EAZ1C,IAAA,CAAA,MAAA,CAAmB,EAAE,CAC9B,IAAA,CAAA,cAAA,CAAyB,EAE1B,IAAA,CAAA,IAAA,CAAe,EACf,IAAA,CAAA,OAAA,CAAkB,EAClB,IAAA,CAAA,MAAA,CAAiB,EACjB,IAAA,CAAA,GAAA,CAAc,EACd,IAAA,CAAA,GAAA,CAAc,EAMH,KAAA,IAAZ,IACF,IAAI,CAAC,IAAI,GAET,EAAQ,gBAAgB,CAAC,UAAW,AAAA,GAAK,IAAI,CAAC,SAAS,CAAC,EAAE,IAAI,GAElE,CAwCF,CF3De,MAAM,EAyIZ,MAAO,CAAe,CAAQ,EAC/B,IAAI,CAAC,OAAO,GAGhB,IAAI,CAAC,OAAO,CAAG,CAAA,EAGf,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAClB,KAAM,eACN,GAAI,IAAI,CAAC,EAAE,CACX,OAAQ,MAAA,EAAA,EAAU,gBACpB,GAEA,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,AAAA,GAAK,EAAE,KAAK,IACjD,IAAI,CAAC,IAAI,CAAC,KAAK,GACf,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,EACE,MAA3B,IAAI,CAAC,kBAAkB,EACzB,cAAc,IAAI,CAAC,kBAAkB,EAED,MAAlC,IAAI,CAAC,yBAAyB,EAChC,aAAa,IAAI,CAAC,yBAAyB,EAGzC,IAAI,CAAC,MAAM,GACb,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAgB,IAAI,EACjC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAO,eAAgB,CAC/C,OAAQ,IAAI,CAAC,EAAE,CACf,OAAQ,MAAA,EAAA,EAAU,GAClB,aAAc,IAAI,CAAC,YAAY,CAAG,OAAS,OAC7C,IAEJ,CAEQ,YAAoB,KAEF,EADxB,IAAM,EAAM,YAAY,GAAG,GACrB,EAAkB,AAAyB,OAAzB,CAAA,EAAA,IAAI,CAAC,IAAI,CAAC,eAAe,AAAf,GAAV,AAAA,KAAA,IAAA,EAAA,EAA6B,IAAI,CAAC,IAAI,CAAC,kBAAkB,CACjF,IAAI,IAAI,CAAC,OAAO,EAGhB,GAAI,CAAC,IAAI,CAAC,MAAM,CAAE,CACQ,WAApB,GACF,IAAI,CAAC,KAAK,CAAC,qBAEb,MACF,CAiBA,GAhBI,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,AAAA,GAAK,AAAiB,SAAjB,EAAE,UAAU,GACrD,IAAI,CAAC,KAAK,CAAC,uBAGT,AAAC,IAAI,CAAC,YAAY,EAAK,AAAoB,iBAApB,GAAsC,AAAoB,WAApB,EAKtD,IAAI,CAAC,YAAY,EAAI,AAAoB,cAApB,GAC9B,IAAI,CAAC,YAAY,CAAG,CAAA,EACpB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,cAAe,IAAI,EAChC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAO,sBAAuB,CAAE,OAAQ,IAAI,CAAC,EAAE,AAAC,IACjE,IAAI,CAAC,YAAY,EAAI,EAAM,IAAI,CAAC,mBAAmB,EAC5D,IAAI,CAAC,KAAK,CAAC,2BATX,IAAI,CAAC,YAAY,CAAG,CAAA,EACpB,IAAI,CAAC,mBAAmB,CAAG,EA9LN,IA+LrB,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,eAAgB,IAAI,EACjC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAO,oBAAqB,CAAE,OAAQ,IAAI,CAAC,EAAE,AAAC,IAQtE,CAAC,IAAI,CAAC,YAAY,EAAI,YAAa,IAAI,CAAC,QAAQ,CAAE,CACpD,IAAM,EAAW,IAAI,CAAC,qBAAqB,AAC1B,CAAA,IAAb,GAEE,AADU,EAAM,EA5MO,KA6Me,EAAM,IAAI,CAAC,2BAA2B,GAC9E,IAAI,CAAC,2BAA2B,CAAG,EAAM,IACzC,IAAI,CAAC,IAAI,CAAC,UAAU,GAG1B,EACF,CAEQ,QAAS,CAAQ,CAAQ,CAC/B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,WAAY,GACiB,IAA3C,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAC7B,QAAQ,KAAK,CAAC,wBAAyB,GAEzC,IAAI,CAAC,UAAU,GACV,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAO,QAAS,CAAE,OAAQ,IAAI,CAAC,EAAE,CAAE,MAAO,KAAK,SAAS,CAAC,EAAG,EACxF,CAKA,MAAM,oBAAqB,CAA4B,CAAiB,CACtE,OAAQ,EAAO,IAAI,EACjB,IAAK,YACH,GAAI,AAAoB,MAApB,EAAO,SAAS,CAClB,GAAI,CACF,MAAM,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAO,SAAS,CAClD,CAAE,MAAO,EAAG,CACV,GAAI,CAAC,IAAI,CAAC,WAAW,CACnB,MAAM,CAEV,CAEF,KAEF,KAAK,cACH,CACE,GAAM,CAAA,YAAE,CAAW,CAAE,CAAG,EAClB,EACJ,CAAC,IAAI,CAAC,WAAW,EAChB,CAAA,AAA6B,WAA7B,IAAI,CAAC,IAAI,CAAC,cAAc,EAAiB,IAAI,CAAC,4BAA4B,AAA5B,EAC3C,EAAiB,AAAqB,UAArB,EAAY,IAAI,EAAgB,CAAC,EAGxD,GADA,IAAI,CAAC,WAAW,CAAG,CAAC,IAAI,CAAC,MAAM,EAAI,EAC/B,IAAI,CAAC,WAAW,CAClB,OAKF,GAHA,IAAI,CAAC,4BAA4B,CAAG,AAAqB,WAArB,EAAY,IAAI,CACpD,MAAM,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,GACrC,IAAI,CAAC,4BAA4B,CAAG,CAAA,EAChC,AAAqB,UAArB,EAAY,IAAI,CAAc,CAI9B,MAAM,IAAI,CAAC,IAAI,CAAC,mBAAmB,GAErC,IAAM,EAAc,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAC9C,GAAI,AAAe,MAAf,EAAqB,CACjB,IAAA,CAAN,OAAA,CAAA,AAA6B,OAAvB,CAAA,EAAA,AAAA,IAAI,CAAC,kBAAkB,AAAlB,GAAL,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAA,IAAA,CAAA,IAAI,CAAsB,EAAa,IAAI,CAAC,MAAM,CAAE,IAAI,CAAC,OAAO,CAAC,EAAE,CAAE,IAAI,CAAC,EAAE,CAAA,EAClF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAClB,KAAM,cACN,OAAQ,IAAI,CAAC,OAAO,CAAC,EAAE,CACvB,UAAW,IAAI,CAAC,EAAE,CAClB,YAAA,CACF,EACF,CACF,CACF,CAEJ,CACF,CAEA,KAAM,CAAe,CAAE,CAAmD,CAAQ,CAChF,GAAI,CAAE,CAAA,KAAW,IAAI,CAAC,QAAQ,AAAR,EACpB,MAAM,AAAI,MAAM,mBAAqB,GAEvC,IAAM,EAAO,IAAI,CAAC,QAAQ,CAAC,EAAQ,AACX,CAAA,SAApB,EAAK,UAAU,EACjB,EAAK,IAAI,CAAC,EAEd,CAEA,UAAoB,CAClB,MAAO,CAAC,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,AAC7B,CAjQA,YAAa,CAAiC,CAAmB,CAAoB,CAAkB,CAAU,CAAkB,CAAyB,CAAE,CAAgC,CAAE,C,A,E,I,C,U,K,G,A,E,I,C,Y,K,G,A,E,I,C,K,K,G,A,E,I,C,S,K,G,A,E,I,C,S,K,GA3BhM,AAAA,EAAA,IAAA,CAAgB,OAAhB,KAAA,GAGA,AAAA,EAAA,IAAA,CAAQ,cAAR,KAAA,GACA,AAAA,EAAA,IAAA,CAAQ,cAAR,KAAA,GACA,AAAA,EAAA,IAAA,CAAQ,+BAAR,KAAA,GAGA,AAAA,EAAA,IAAA,CAAQ,SAAR,KAAA,GACA,AAAA,EAAA,IAAA,CAAQ,UAAR,KAAA,GACA,AAAA,EAAA,IAAA,CAAQ,eAAR,KAAA,GACA,AAAA,EAAA,IAAA,CAAQ,sBAAR,KAAA,GACA,AAAA,EAAA,IAAA,CAAQ,8BAAR,KAAA,GAEA,AAAA,EAAA,IAAA,CAAO,UAAP,KAAA,GACA,AAAA,EAAA,IAAA,CAAQ,wBAAR,KAAA,GAEA,AAAA,EAAA,IAAA,CAAQ,oBAAR,KAAA,GACA,AAAA,EAAA,IAAA,CAAQ,4BAAR,KAAA,GACA,AAAA,EAAA,IAAA,CAAiB,qBAAjB,KAAA,GACA,AAAA,EAAA,IAAA,CAAiB,WAAjB,KAAA,GAEA,AAAA,EAAA,IAAA,CAAiB,qBAAjB,KAAA,GAK8B,IAAA,CAAA,OAAA,CAAA,EAAmC,IAAA,CAAA,SAAA,CAAA,EAAsC,IAAA,CAAA,EAAA,CAAA,EAA4B,IAAA,CAAA,MAAA,CAAA,EAA4C,IAAA,CAAA,MAAA,CAAA,EAxBvK,IAAA,CAAA,WAAA,CAAuB,CAAA,EACvB,IAAA,CAAA,WAAA,CAAuB,CAAA,EACvB,IAAA,CAAA,4BAAA,CAAwC,CAAA,EAGxC,IAAA,CAAA,MAAA,CAAkB,CAAA,EAClB,IAAA,CAAA,OAAA,CAAmB,CAAA,EACnB,IAAA,CAAA,YAAA,CAAwB,CAAA,EACxB,IAAA,CAAA,mBAAA,CAA8B,EAC9B,IAAA,CAAA,2BAAA,CAAsC,EAEvC,IAAA,CAAA,OAAA,CAAmB,IAAI,EAAQ,IAAI,EAClC,IAAA,CAAA,qBAAA,CAAgC,EAatC,IAAI,CAAC,QAAQ,CAAG,CAAC,EACjB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,iBAEjB,IAAI,CAAC,kBAAkB,CAAG,KAAA,EAE1B,IAAI,CAAC,IAAI,CAAG,IAAI,kBAAkB,GAC9B,AAAwB,KAAA,IAAxB,EAAO,YAAY,CACrB,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,eAAgB,AAAA,IACzC,IAAM,EAAY,EAAE,SAAS,AACX,QAAd,GACF,EAAU,IAAI,CAAC,CACb,KAAM,YACN,OAAQ,IAAI,CAAC,OAAO,CAAC,EAAE,CACvB,UAAW,IAAI,CAAC,EAAE,CAClB,UAAA,CACF,EAEJ,GAEA,IAAI,CAAC,kBAAkB,CAAG,EAE5B,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,oBAAqB,KAC9C,IAAI,CAAC,iBAAiB,CAAG,WAAW,KACjC,AAAA,CAAA,iBACC,GAAI,CACF,GAAI,EAAK,OAAO,CACd,MAEF,CAAA,EAAK,WAAW,CAAG,CAAA,EAMjB,MAAM,EAAK,IAAI,CAAC,mBAAmB,GAErC,IAAM,EAAc,EAAK,IAAI,CAAC,gBAAgB,CAC9C,GAAI,AAAe,MAAf,EAAqB,CACjB,IAAA,EAAA,CAAN,OAAA,CAAA,AAA6B,OAAvB,CAAA,EAAA,AAAA,EAAK,kBAAkB,AAAlB,GAAL,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAA,IAAA,CAAA,EAA0B,EAAa,EAAK,MAAM,CAAE,EAAK,OAAO,CAAC,EAAE,CAAE,EAAK,EAAE,CAAA,EAClF,EAAK,SAAS,CAAC,IAAI,CAAC,CAClB,KAAM,cACN,OAAQ,EAAK,OAAO,CAAC,EAAE,CACvB,UAAW,EAAK,EAAE,CAClB,YAAA,CACF,EACF,CACF,CAAE,MAAO,EAAG,CACV,IAAM,EAAQ,IAAI,EAAe,gBAAiB,GAClD,EAAK,OAAO,CAAC,iBAAiB,CAAC,EACjC,QAAU,CACR,EAAK,WAAW,CAAG,CAAA,CACrB,CACF,CAAA,IAAK,KAAK,CAAC,AAAA,IAAM,EACnB,EAAG,IAAI,CAAC,MAAM,CAAG,IAAM,EACzB,GAEA,IAAI,CAAC,kBAAkB,CAAG,YAAY,KACpC,IAAI,CAAC,UAAU,EACjB,EAAG,KACH,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,uBAAwB,IAAM,IAAI,CAAC,UAAU,IACxE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,wBAAyB,IAAM,IAAI,CAAC,UAAU,IACzE,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,2BAA4B,IAAM,IAAI,CAAC,UAAU,IAE5E,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,aAAc,IAAI,EAEpC,IAAI,EAAI,EACR,IAAK,IAAM,KAAS,IAAI,CAAC,OAAO,CAAC,YAAY,CAAE,CAC7C,IAAM,EAAO,IAAI,CAAC,IAAI,CAAC,iBAAiB,CAAC,EAAO,ACzFtD,SAA8B,CAAM,CAAE,CAAM,EAUxC,OATA,EAAS,AAAU,MAAV,EAAiB,EAAS,CAAC,EAEhC,OAAO,yBAAyB,CAAE,OAAO,gBAAgB,CAAC,EAAQ,OAAO,yBAAyB,CAAC,IAEnG,AApBR,CAAA,SAAiB,CAAM,CAAE,CAAc,EACnC,IAAI,EAAO,OAAO,IAAI,CAAC,GAEvB,GAAI,OAAO,qBAAqB,CAAE,CAC9B,IAAI,EAAU,OAAO,qBAAqB,CAAC,GAM3C,EAAK,IAAI,CAAC,KAAK,CAAC,EAAM,EAC1B,CAEA,OAAO,CACX,CAAA,EAMgB,OAAO,IAAS,OAAO,CAAC,SAAS,CAAG,EACxC,OAAO,cAAc,CAAC,EAAQ,EAAK,OAAO,wBAAwB,CAAC,EAAQ,GAC/E,GAGG,CACX,ED8EsD,AAAA,EAAA,CAAA,EAC3C,IAAI,CAAC,OAAO,CAAC,YAAY,CAAC,EAAM,EADrC,CAEE,GAAI,IACJ,WAAY,CAAA,C,GAEd,CAAA,EAAK,UAAU,CAAG,cAClB,EAAK,gBAAgB,CAAC,QAAS,AAAA,GAAK,IAAI,CAAC,OAAO,CAAC,IACjD,EAAK,gBAAgB,CAAC,UAAW,IAAM,IAAI,CAAC,UAAU,IACtD,EAAK,gBAAgB,CAAC,QAAS,IAAM,IAAI,CAAC,UAAU,IACpD,EAAK,gBAAgB,CAAC,OAAQ,KACvB,IAAI,CAAC,MAAM,EAAK,OAAO,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,AAAA,GAAK,AAAiB,SAAjB,EAAE,UAAU,IAClE,YAAa,IAAI,CAAC,QAAQ,EAC5B,CAAA,IAAI,CAAC,OAAO,CAAG,IAAI,EAAQ,IAAI,CAAE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAA,EAGzB,KAAA,IAA3B,IAAI,CAAC,iBAAiB,EACxB,aAAa,IAAI,CAAC,iBAAiB,EAGrC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAClB,KAAM,YACN,GAAI,IAAI,CAAC,EAAE,AACb,GACA,IAAI,CAAC,MAAM,CAAG,CAAA,EACd,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAa,IAAI,EAC9B,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAO,YAAa,CAAE,OAAQ,IAAI,CAAC,EAAE,AAAC,GAChE,IAAI,CAAC,yBAAyB,CAAG,WAAW,KACrC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAO,qBAAsB,CAAE,OAAQ,IAAI,CAAC,EAAE,CAAE,QAAS,CAAC,EAAE,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,AAAC,EAC/G,EAAG,KAEP,GACA,EAAK,gBAAgB,CAAC,UAAW,AAAA,IAC/B,IAAI,CAAC,qBAAqB,CAAG,YAAY,GAAG,GAC9B,YAAV,GACF,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAW,IAAI,CAAE,EAAO,EAAE,IAAI,CAEpD,GACA,IAAI,CAAC,QAAQ,CAAC,EAAM,CAAG,CACzB,CACF,CAuJF,CAEA,eAAe,EAAwB,CAA2B,CAAE,CAAyB,CAAE,CAAc,CAAE,CAAe,EAC5H,GAAI,AAAwB,KAAA,IAAxB,EAAO,YAAY,CACrB,OAGF,IAAI,EAAQ,EAAK,GAAG,CAAC,KAAK,CAAC,QAC3B,EAAQ,EAAM,MAAM,CAAC,AAAA,GACZ,CAAC,EAAE,UAAU,CAAC,gBAAmB,EAAE,QAAQ,CAAC,cAAgB,EAAE,QAAQ,CAAC,QAGhF,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACrC,IAAM,EAAI,CAAK,CAAC,EAAE,CAClB,GAAI,EAAE,UAAU,CAAC,gBAAkB,EAAE,QAAQ,CAAC,aAAc,CACtC,IAAA,EAApB,IAAM,EAAA,AAAuC,OAAzB,CAAA,EAAA,EAAE,KAAK,CAAC,cAAc,GAAG,EAAA,GAAzB,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAA6B,KAAK,CAAC,IAAI,CAAC,EAAE,CAC9D,GAAI,AAAe,MAAf,EAAqB,CACvB,IAAM,EAAO,MAAM,MAAM,CAAC,EAAE,EAAO,YAAY,CAAC,WAAW,EAAE,EAAS,EAAQ,MAAM,EAAE,EAAY,CAAC,EAC7F,EAAiB,MAAM,EAAK,IAAI,EACtC,CAAA,CAAK,CAAC,EAAE,CAAG,EAAE,UAAU,CAAC,CAAC,CAAC,EAAE,EAAY,CAAC,CAAC,CAAE,CAAC,CAAC,EAAE,EAAe,CAAC,CAAC,CACnE,CACF,CACF,CAEE,EAAa,GAAG,CAAG,EAAM,IAAI,CAAC,OAClC,CJrSe,MAAM,UAAgB,EAAA,YAAW,CAuB9C,MAAM,KAAM,CAAe,CAA6B,CACtD,GAAI,IAAI,CAAC,QAAQ,EAAI,AAA8B,KAAA,IAA9B,IAAI,CAAC,SAAS,CAAC,UAAU,CAC5C,MAAO,EAAE,CAEX,IAAM,EAAe,AAAW,MAAX,EAAmB,KAAK,SAAS,CAAC,GAAU,KAAA,EAC3D,EAAQ,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CACzC,KAAM,OACN,OAAQ,CACV,SACA,AAAI,AAAe,YAAf,EAAM,IAAI,CACL,EAAM,OAAO,CAEf,EAAE,AACX,CAEA,MAAM,OAAQ,CAAwB,CAAmB,CACvD,GAAI,IAAI,CAAC,QAAQ,EAAI,AAA8B,KAAA,IAA9B,IAAI,CAAC,SAAS,CAAC,UAAU,CAC5C,MAAO,GAET,IAAM,EAAQ,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,AAA3C,EAAA,CACE,KAAM,QACH,EAAA,UAEL,AAAI,AAAe,WAAf,EAAM,IAAI,CACL,EAAM,SAAS,CAAC,IAAI,CAEtB,EACT,CAEA,MAAM,KAAM,CAAa,CAAE,CAAiB,CAAuC,CACjF,GAAI,IAAI,CAAC,QAAQ,EAAI,AAA8B,KAAA,IAA9B,IAAI,CAAC,SAAS,CAAC,UAAU,CAC5C,OAEF,IAAM,EAAQ,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CACzC,KAAM,OACN,MAAA,EACA,SAAA,CACF,GACA,GAAI,AAAe,WAAf,EAAM,IAAI,CACZ,OAAO,EAAM,SAAS,AAG1B,CAEA,MAAM,iBAAkB,CAAuB,CAAyB,QACtE,AAAI,IAAI,CAAC,QAAQ,EAAI,AAA8B,KAAA,IAA9B,IAAI,CAAC,SAAS,CAAC,UAAU,CACrC,AAAI,MAAM,wCAEnB,MAAM,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,AAA7B,EAAA,CACE,KAAM,aACH,EAAA,IAEE,CAAA,EACT,CAEA,MAAO,CAAe,CAAQ,CACxB,IAAI,CAAC,QAAQ,EAAI,AAA8B,KAAA,IAA9B,IAAI,CAAC,SAAS,CAAC,UAAU,GAG9C,IAAI,CAAC,QAAQ,CAAG,CAAA,EAChB,IAAI,CAAC,IAAI,CAAC,QAAS,GAEH,KAAZ,IAAI,CAAC,EAAE,EACT,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAClB,KAAM,QACN,GAAI,IAAI,CAAC,EAAE,CACX,OAAQ,MAAA,EAAA,EAAU,gBACpB,GAGF,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,AAAA,GAAQ,EAAK,KAAK,CAAC,IACtC,IAAI,CAAC,SAAS,CAAC,KAAK,GAEE,aAAlB,OAAO,QACT,OAAO,mBAAmB,CAAC,SAAU,IAAI,CAAC,cAAc,EAE5D,CAEA,KAAM,CAAe,CAAE,CAAc,CAAE,CAAmD,CAAQ,CAK9F,IAAA,EAJF,GAAI,CAAE,CAAA,KAAW,IAAI,CAAC,YAAY,AAAZ,EACpB,MAAM,AAAI,MAAM,mBAAqB,GAEnC,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAA,CAAA,AACF,OAAf,CAAA,EAAA,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAA,GAAf,AAAA,KAAA,IAAA,GAAA,EAAwB,IAAI,CAAC,EAAS,EADxC,CAGF,CAEA,UAAW,CAAe,CAAE,CAAmD,CAAQ,CACrF,GAAI,CAAE,CAAA,KAAW,IAAI,CAAC,YAAY,AAAZ,EACpB,MAAM,AAAI,MAAM,mBAAqB,GAEvC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,AAAA,GAAQ,EAAK,IAAI,CAAC,EAAS,GAChD,CAKA,MAAM,SAAU,CAAU,CAAE,CAAe,CAAiB,CAGtC,IAAA,EAFpB,IAAM,EAAS,MAAM,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,CAEpE,CAAA,EAAO,UAAU,CAAA,AAAoB,OAAjB,CAAA,EAAA,EAAO,UAAU,AAAV,GAAP,AAAA,KAAA,IAAA,EAAA,KAAA,EAAA,EAAmB,MAAM,CAAC,AAAA,GAAU,CAAE,CAAA,EAAO,IAAI,CAAC,QAAQ,CAAC,UAAY,AAAoB,KAAA,IAApB,EAAO,QAAQ,AAAK,GAE/G,IAAM,EAAO,IAAI,EAAK,IAAI,CAAE,IAAI,CAAC,SAAS,CAAE,EAAI,EAAQ,GACxD,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,EAAI,EACrB,CAKA,YAAa,CAAU,CAAW,CAChC,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,EAAK,EAAE,CAClC,CAKA,0BAAkC,CAChC,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,KAAO,EAChE,CAKA,kBAAmB,CAAiB,CAAQ,CAC1C,IAAI,CAAC,IAAI,CAAC,iBAAkB,GACiB,IAAzC,IAAI,CAAC,aAAa,CAAC,mBACrB,QAAQ,KAAK,CAAC,+BAAgC,GAE3C,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,YAAa,QAAS,CAAE,MAAO,KAAK,SAAS,CAAC,EAAG,EAC7E,CAKA,0BAAkC,CAChC,IAAI,CAAC,SAAS,CAAC,KAAK,EACtB,CAEA,IAAI,IAAc,CACT,IAAA,EAAP,OAAO,AAAyB,OAAzB,CAAA,EAAA,IAAI,CAAC,SAAS,CAAC,UAAU,AAAV,GAAf,AAAA,KAAA,IAAA,EAAA,EAA6B,EACtC,CAEA,IAAI,SAAoB,CACtB,OAAO,IAAI,CAAC,QAAQ,AACtB,CAEA,IAAI,MAAgB,CAClB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,AACxB,CAEA,IAAI,cAAoC,CACtC,OAAO,IAAI,CAAC,SAAS,CAAC,YAAY,AACpC,CAEA,IAAI,kBAAgD,CAClD,OAAO,IAAI,CAAC,SAAS,CAAC,gBAAgB,AACxC,CAEA,IAAI,eAA4C,CAC9C,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,AACrC,CA5KA,YAA6B,CAAc,CAAE,EAAgD,CAAuB,CAAE,EAAuB,CAAmB,CAAE,CAChK,KAAK,G,A,E,I,C,S,K,G,A,E,I,C,Y,K,GAXP,AAAA,EAAA,IAAA,CAAQ,WAAR,KAAA,GACA,AAAA,EAAA,IAAA,CAAgB,QAAhB,KAAA,GACA,AAAA,EAAA,IAAA,CAAiB,YAAjB,KAAA,GACA,AAAA,EAAA,IAAA,CAAiB,cAAjB,KAAA,GACA,AAAA,EAAA,IAAA,CAAO,eAAP,KAAA,GAEA,AAAA,EAAA,IAAA,CAAO,MAAP,KAAA,GAEA,AAAA,EAAA,IAAA,CAAiB,iBAAjB,KAAA,GAE6B,IAAA,CAAA,MAAA,CAAA,EAAiC,IAAA,CAAA,SAAA,CAAA,EAVtD,IAAA,CAAA,QAAA,CAAoB,CAAA,EAIrB,IAAA,CAAA,YAAA,CAAwD,EAExD,IAAA,CAAA,GAAA,CAAgC,CAAC,GAAG,KAAiB,EAM1D,IAAI,CAAC,KAAK,CAAG,IAAI,IACjB,IAAI,CAAC,SAAS,CAAG,IAAI,EAAU,IAAI,CAAE,IAAI,CAAC,KAAK,CAAE,GACjD,IAAI,CAAC,WAAW,CAAG,IAAI,EAAY,IAAI,CAAC,SAAS,EAEjD,IAAI,CAAC,cAAc,CAAG,IAAM,IAAI,CAAC,KAAK,GAChB,aAAlB,OAAO,QACT,OAAO,gBAAgB,CAAC,SAAU,IAAI,CAAC,cAAc,CAEzD,CAmKF,CH/MO,IAAM,EAAsB,oCAEtB,EAA6C,CACxD,WAAY,CACV,CACE,KAAM,CACJ,+BACD,AACH,EACA,CACE,KAAM,CACR,EACD,AACH,EAEa,EAA+D,CAC1E,SAAU,CACR,QAAS,CAAA,CACX,EACA,WAAY,CACV,QAAS,CAAA,EACT,eAAgB,CAClB,EACA,QAAS,CACP,QAAS,CAAA,CACX,CACF,CDZA,CAZE,CAAA,AAAkB,aAAlB,OAAO,OACH,OACA,AAAsB,aAAtB,OAAO,WACL,WACA,AAAgB,aAAhB,OAAO,KACL,KACA,AAAkB,aAAlB,OAAO,OACL,OACA,AAAkB,KAAA,IAAX,EACL,EACA,CAAC,CAAA,EAER,MAAM,CAAG,C","sources":["<anon>","lib/legacy.ts","lib/index.ts","lib/credentials.ts","node_modules/@swc/helpers/esm/_define_property.js","lib/network.ts","node_modules/@swc/helpers/esm/_object_spread.js","node_modules/eventemitter3/index.js","lib/signaling.ts","lib/peer.ts","node_modules/@swc/helpers/esm/_object_spread_props.js","lib/latency.ts"],"sourcesContent":["(function () {\n\n      var $parcel$global =\n        typeof globalThis !== 'undefined'\n          ? globalThis\n          : typeof self !== 'undefined'\n          ? self\n          : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n          ? global\n          : {};\n  \nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\nvar $3c6f41ed235719d2$exports = {};\n\n$parcel$export($3c6f41ed235719d2$exports, \"DefaultSignalingURL\", function () { return $3c6f41ed235719d2$export$f26023e62b577463; });\n$parcel$export($3c6f41ed235719d2$exports, \"DefaultRTCConfiguration\", function () { return $3c6f41ed235719d2$export$34c0e73c967be630; });\n$parcel$export($3c6f41ed235719d2$exports, \"DefaultDataChannels\", function () { return $3c6f41ed235719d2$export$3e03293f7176f9b3; });\n$parcel$export($3c6f41ed235719d2$exports, \"Network\", function () { return $32626390439ccfcc$export$2e2bcd8739ae039; });\nfunction $c991cc2e93d39f4f$export$71511d61b312f219(obj, key, value) {\n    if (key in obj) Object.defineProperty(obj, key, {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n    });\n    else obj[key] = value;\n    return obj;\n}\n\n\nconst $89c2d705afbd1652$var$FetchTimeout = 5000;\nconst $89c2d705afbd1652$export$3be8bbe0727053e5 = \"turn:turn.rtc.poki.com\";\nclass $89c2d705afbd1652$export$2e2bcd8739ae039 {\n    async fillCredentials(config) {\n        var _cloned_iceServers;\n        const cloned = JSON.parse(JSON.stringify(config));\n        if (config.testproxyURL !== undefined) return cloned;\n        var _cloned_iceServers_some;\n        const hasPokiTurn = (_cloned_iceServers_some = (_cloned_iceServers = cloned.iceServers) === null || _cloned_iceServers === void 0 ? void 0 : _cloned_iceServers.some((s)=>s.urls === $89c2d705afbd1652$export$3be8bbe0727053e5 || s.urls.includes($89c2d705afbd1652$export$3be8bbe0727053e5))) !== null && _cloned_iceServers_some !== void 0 ? _cloned_iceServers_some : false;\n        if (!hasPokiTurn || cloned.iceServers === undefined) return cloned;\n        if (this.runningPromise === undefined) this.runningPromise = new Promise((resolve)=>{\n            if (this.cachedCredentials != null && this.cachedCredentialsExpireAt > performance.now()) {\n                resolve(this.cachedCredentials);\n                return;\n            }\n            this.signaling.request({\n                type: \"credentials\"\n            }).then((credentials)=>{\n                if (credentials.type === \"credentials\") {\n                    this.cachedCredentials = credentials;\n                    var _credentials_lifetime;\n                    this.cachedCredentialsExpireAt = performance.now() + (((_credentials_lifetime = credentials.lifetime) !== null && _credentials_lifetime !== void 0 ? _credentials_lifetime : 0) - 60) * 1000;\n                    resolve(credentials);\n                }\n            }).catch(()=>{\n                resolve({\n                    type: \"credentials\"\n                });\n                this.cachedCredentials = {\n                    type: \"credentials\"\n                };\n                this.cachedCredentialsExpireAt = performance.now() + $89c2d705afbd1652$var$FetchTimeout;\n            });\n            setTimeout(()=>{\n                resolve({\n                    type: \"credentials\"\n                });\n                this.cachedCredentials = {\n                    type: \"credentials\"\n                };\n                this.cachedCredentialsExpireAt = performance.now() + $89c2d705afbd1652$var$FetchTimeout;\n            }, $89c2d705afbd1652$var$FetchTimeout);\n        });\n        const credentials = await this.runningPromise;\n        this.runningPromise = undefined;\n        if (credentials.url === undefined) return cloned;\n        cloned.iceServers.forEach((s)=>{\n            if (s.urls === $89c2d705afbd1652$export$3be8bbe0727053e5 || s.urls.includes($89c2d705afbd1652$export$3be8bbe0727053e5)) {\n                var _credentials_url;\n                s.urls = (_credentials_url = credentials.url) !== null && _credentials_url !== void 0 ? _credentials_url : \"\";\n                s.username = credentials.username;\n                s.credential = credentials.credential;\n            }\n        });\n        return cloned;\n    }\n    constructor(signaling){\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"signaling\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"cachedCredentials\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"cachedCredentialsExpireAt\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"runningPromise\", void 0);\n        this.signaling = signaling;\n        this.cachedCredentialsExpireAt = 0;\n    }\n}\n\n\n\n\nfunction $b22b95c8f829a264$export$71511d61b312f219(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n        }));\n        ownKeys.forEach(function(key) {\n            (0, $c991cc2e93d39f4f$export$71511d61b312f219)(target, key, source[key]);\n        });\n    }\n    return target;\n}\n\n\nvar $54f026ab89254b88$exports = {};\n\"use strict\";\nvar $54f026ab89254b88$var$has = Object.prototype.hasOwnProperty, $54f026ab89254b88$var$prefix = \"~\";\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */ function $54f026ab89254b88$var$Events() {}\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n    $54f026ab89254b88$var$Events.prototype = Object.create(null);\n    //\n    // This hack is needed because the `__proto__` property is still inherited in\n    // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n    //\n    if (!new $54f026ab89254b88$var$Events().__proto__) $54f026ab89254b88$var$prefix = false;\n}\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */ function $54f026ab89254b88$var$EE(fn, context, once) {\n    this.fn = fn;\n    this.context = context;\n    this.once = once || false;\n}\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */ function $54f026ab89254b88$var$addListener(emitter, event, fn, context, once) {\n    if (typeof fn !== \"function\") throw new TypeError(\"The listener must be a function\");\n    var listener = new $54f026ab89254b88$var$EE(fn, context || emitter, once), evt = $54f026ab89254b88$var$prefix ? $54f026ab89254b88$var$prefix + event : event;\n    if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n    else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n    else emitter._events[evt] = [\n        emitter._events[evt],\n        listener\n    ];\n    return emitter;\n}\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */ function $54f026ab89254b88$var$clearEvent(emitter, evt) {\n    if (--emitter._eventsCount === 0) emitter._events = new $54f026ab89254b88$var$Events();\n    else delete emitter._events[evt];\n}\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */ function $54f026ab89254b88$var$EventEmitter() {\n    this._events = new $54f026ab89254b88$var$Events();\n    this._eventsCount = 0;\n}\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */ $54f026ab89254b88$var$EventEmitter.prototype.eventNames = function eventNames() {\n    var names = [], events, name;\n    if (this._eventsCount === 0) return names;\n    for(name in events = this._events)if ($54f026ab89254b88$var$has.call(events, name)) names.push($54f026ab89254b88$var$prefix ? name.slice(1) : name);\n    if (Object.getOwnPropertySymbols) return names.concat(Object.getOwnPropertySymbols(events));\n    return names;\n};\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */ $54f026ab89254b88$var$EventEmitter.prototype.listeners = function listeners(event) {\n    var evt = $54f026ab89254b88$var$prefix ? $54f026ab89254b88$var$prefix + event : event, handlers = this._events[evt];\n    if (!handlers) return [];\n    if (handlers.fn) return [\n        handlers.fn\n    ];\n    for(var i = 0, l = handlers.length, ee = new Array(l); i < l; i++)ee[i] = handlers[i].fn;\n    return ee;\n};\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */ $54f026ab89254b88$var$EventEmitter.prototype.listenerCount = function listenerCount(event) {\n    var evt = $54f026ab89254b88$var$prefix ? $54f026ab89254b88$var$prefix + event : event, listeners = this._events[evt];\n    if (!listeners) return 0;\n    if (listeners.fn) return 1;\n    return listeners.length;\n};\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */ $54f026ab89254b88$var$EventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n    var evt = $54f026ab89254b88$var$prefix ? $54f026ab89254b88$var$prefix + event : event;\n    if (!this._events[evt]) return false;\n    var listeners = this._events[evt], len = arguments.length, args, i;\n    if (listeners.fn) {\n        if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n        switch(len){\n            case 1:\n                return listeners.fn.call(listeners.context), true;\n            case 2:\n                return listeners.fn.call(listeners.context, a1), true;\n            case 3:\n                return listeners.fn.call(listeners.context, a1, a2), true;\n            case 4:\n                return listeners.fn.call(listeners.context, a1, a2, a3), true;\n            case 5:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n            case 6:\n                return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n        }\n        for(i = 1, args = new Array(len - 1); i < len; i++)args[i - 1] = arguments[i];\n        listeners.fn.apply(listeners.context, args);\n    } else {\n        var length = listeners.length, j;\n        for(i = 0; i < length; i++){\n            if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n            switch(len){\n                case 1:\n                    listeners[i].fn.call(listeners[i].context);\n                    break;\n                case 2:\n                    listeners[i].fn.call(listeners[i].context, a1);\n                    break;\n                case 3:\n                    listeners[i].fn.call(listeners[i].context, a1, a2);\n                    break;\n                case 4:\n                    listeners[i].fn.call(listeners[i].context, a1, a2, a3);\n                    break;\n                default:\n                    if (!args) for(j = 1, args = new Array(len - 1); j < len; j++)args[j - 1] = arguments[j];\n                    listeners[i].fn.apply(listeners[i].context, args);\n            }\n        }\n    }\n    return true;\n};\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ $54f026ab89254b88$var$EventEmitter.prototype.on = function on(event, fn, context) {\n    return $54f026ab89254b88$var$addListener(this, event, fn, context, false);\n};\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */ $54f026ab89254b88$var$EventEmitter.prototype.once = function once(event, fn, context) {\n    return $54f026ab89254b88$var$addListener(this, event, fn, context, true);\n};\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */ $54f026ab89254b88$var$EventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n    var evt = $54f026ab89254b88$var$prefix ? $54f026ab89254b88$var$prefix + event : event;\n    if (!this._events[evt]) return this;\n    if (!fn) {\n        $54f026ab89254b88$var$clearEvent(this, evt);\n        return this;\n    }\n    var listeners = this._events[evt];\n    if (listeners.fn) {\n        if (listeners.fn === fn && (!once || listeners.once) && (!context || listeners.context === context)) $54f026ab89254b88$var$clearEvent(this, evt);\n    } else {\n        for(var i = 0, events = [], length = listeners.length; i < length; i++)if (listeners[i].fn !== fn || once && !listeners[i].once || context && listeners[i].context !== context) events.push(listeners[i]);\n        //\n        // Reset the array, or remove it completely if we have no more listeners.\n        //\n        if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n        else $54f026ab89254b88$var$clearEvent(this, evt);\n    }\n    return this;\n};\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */ $54f026ab89254b88$var$EventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n    var evt;\n    if (event) {\n        evt = $54f026ab89254b88$var$prefix ? $54f026ab89254b88$var$prefix + event : event;\n        if (this._events[evt]) $54f026ab89254b88$var$clearEvent(this, evt);\n    } else {\n        this._events = new $54f026ab89254b88$var$Events();\n        this._eventsCount = 0;\n    }\n    return this;\n};\n//\n// Alias methods names because people roll like that.\n//\n$54f026ab89254b88$var$EventEmitter.prototype.off = $54f026ab89254b88$var$EventEmitter.prototype.removeListener;\n$54f026ab89254b88$var$EventEmitter.prototype.addListener = $54f026ab89254b88$var$EventEmitter.prototype.on;\n//\n// Expose the prefix.\n//\n$54f026ab89254b88$var$EventEmitter.prefixed = $54f026ab89254b88$var$prefix;\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\n$54f026ab89254b88$var$EventEmitter.EventEmitter = $54f026ab89254b88$var$EventEmitter;\n$54f026ab89254b88$exports = $54f026ab89254b88$var$EventEmitter;\n\n\n\n\n\nclass $cd98a826fa8ebb17$export$2e2bcd8739ae039 extends (0, $54f026ab89254b88$exports.EventEmitter) {\n    connect() {\n        const ws = new WebSocket(this.url);\n        const onOpen = ()=>{\n            this.reconnectAttempt = 0;\n            this.reconnecting = false;\n            this.send({\n                type: \"hello\",\n                game: this.network.gameID,\n                id: this.receivedID,\n                secret: this.receivedSecret\n            });\n        };\n        const onError = (e)=>{\n            const error = new $cd98a826fa8ebb17$export$4299251c42ef608f(\"socket-error\", \"unexpected websocket error\", e);\n            this.network._onSignalingError(error);\n            if (ws.readyState === WebSocket.CLOSED) {\n                this.reconnecting = false;\n                ws.removeEventListener(\"open\", onOpen);\n                ws.removeEventListener(\"error\", onError);\n                ws.removeEventListener(\"message\", onMessage);\n                ws.removeEventListener(\"close\", onClose);\n                // Don't try to reconnect too quickly, give the server a chance\n                // to store our disconnection in the db, so when we reconnect\n                // it recognizes us.\n                setTimeout(()=>{\n                    this.reconnect();\n                }, 100);\n            }\n        };\n        const onMessage = (ev)=>{\n            this.handleSignalingMessage(ev.data).catch((_)=>{});\n        };\n        const onClose = ()=>{\n            if (!this.network.closing) {\n                const error = new $cd98a826fa8ebb17$export$4299251c42ef608f(\"socket-error\", \"signaling socket closed\");\n                this.network._onSignalingError(error);\n            }\n            ws.removeEventListener(\"open\", onOpen);\n            ws.removeEventListener(\"error\", onError);\n            ws.removeEventListener(\"message\", onMessage);\n            ws.removeEventListener(\"close\", onClose);\n            // Don't try to reconnect too quickly, give the server a chance\n            // to store our disconnection in the db, so when we reconnect\n            // it recognizes us.\n            setTimeout(()=>{\n                this.reconnect();\n            }, 100);\n        };\n        ws.addEventListener(\"open\", onOpen);\n        ws.addEventListener(\"error\", onError);\n        ws.addEventListener(\"message\", onMessage);\n        ws.addEventListener(\"close\", onClose);\n        return ws;\n    }\n    reconnect() {\n        if (this.reconnecting || this.network.closing) return;\n        this.close();\n        this.requests.forEach((r)=>r.reject(new $cd98a826fa8ebb17$export$4299251c42ef608f(\"socket-error\", \"signaling socket closed\")));\n        this.requests.clear();\n        if (this.reconnectAttempt > 42) {\n            this.network.emit(\"failed\");\n            this.network._onSignalingError(new $cd98a826fa8ebb17$export$4299251c42ef608f(\"socket-error\", \"giving up on reconnecting to signaling server\"));\n            return;\n        }\n        this.event(\"signaling\", \"attempt-reconnect\");\n        this.reconnecting = true;\n        setTimeout(()=>{\n            this.ws = this.connect();\n        }, Math.random() * 100 * this.reconnectAttempt);\n        this.reconnectAttempt += 1;\n    }\n    close() {\n        this.ws.close();\n    }\n    async request(packet) {\n        return await new Promise((resolve, reject)=>{\n            if (this.ws.readyState !== WebSocket.OPEN) reject(new $cd98a826fa8ebb17$export$4299251c42ef608f(\"socket-error\", \"signaling socket not open\"));\n            const rid = Math.random().toString(36).slice(2);\n            packet.rid = rid;\n            this.network.log(\"requesting signaling packet:\", packet.type);\n            const data = JSON.stringify(packet);\n            this.ws.send(data);\n            this.requests.set(rid, {\n                resolve: resolve,\n                reject: reject\n            });\n        });\n    }\n    send(packet) {\n        if (this.ws.readyState === WebSocket.OPEN) {\n            this.network.log(\"sending signaling packet:\", packet.type);\n            const data = JSON.stringify(packet);\n            this.ws.send(data);\n        }\n    }\n    async handleSignalingMessage(data) {\n        try {\n            const packet = JSON.parse(data);\n            this.network.log(\"signaling packet received:\", packet.type);\n            if (packet.rid !== undefined) {\n                const request = this.requests.get(packet.rid);\n                if (request != null) {\n                    this.requests.delete(packet.rid);\n                    if (packet.type === \"error\") request.reject(new $cd98a826fa8ebb17$export$4299251c42ef608f(\"server-error\", packet.message, undefined, packet.code));\n                    else request.resolve(packet);\n                }\n            }\n            switch(packet.type){\n                case \"error\":\n                    {\n                        var _packet_error;\n                        const error = new $cd98a826fa8ebb17$export$4299251c42ef608f(\"server-error\", packet.message, undefined, packet.code);\n                        this.network._onSignalingError(error);\n                        if (packet.code === \"missing-recipient\" && ((_packet_error = packet.error) === null || _packet_error === void 0 ? void 0 : _packet_error.recipient) !== undefined) {\n                            var _packet_error1;\n                            const id = (_packet_error1 = packet.error) === null || _packet_error1 === void 0 ? void 0 : _packet_error1.recipient;\n                            if (this.connections.has(id)) {\n                                var _this_connections_get;\n                                this.network.log(\"cleaning up missing recipient\", id);\n                                (_this_connections_get = this.connections.get(id)) === null || _this_connections_get === void 0 ? void 0 : _this_connections_get.close(\"missing-recipient\");\n                            }\n                        } else if (packet.code === \"reconnect-failed\") this.network.close(\"reconnect failed\");\n                    }\n                    break;\n                case \"welcome\":\n                    if (this.receivedID !== undefined) {\n                        this.network.log(\"signaling reconnected\");\n                        this.network.emit(\"signalingreconnected\");\n                        return;\n                    }\n                    if (packet.id === \"\") throw new Error(\"missing id on received welcome packet\");\n                    this.receivedID = packet.id;\n                    this.receivedSecret = packet.secret;\n                    this.network.emit(\"ready\");\n                    this.network._prefetchTURNCredentials();\n                    break;\n                case \"joined\":\n                    {\n                        const code = packet.lobbyInfo.code;\n                        if (code === \"\") throw new Error(\"missing lobby on received connect packet\");\n                        this.currentLobby = code;\n                        this.currentLeader = packet.lobbyInfo.leader;\n                        this.currentTerm = packet.lobbyInfo.term;\n                        this.network.emit(\"lobby\", code, packet.lobbyInfo);\n                        if (this.currentLeader !== undefined) this.network.emit(\"leader\", this.currentLeader);\n                    }\n                    break;\n                case \"leader\":\n                    if (this.currentLobby === undefined) // We're not in a lobby, ignore leader packets.\n                    return;\n                    if (packet.term > this.currentTerm) {\n                        this.currentLeader = packet.leader;\n                        this.currentTerm = packet.term;\n                        this.network.emit(\"leader\", packet.leader);\n                    }\n                    break;\n                case \"lobbyUpdated\":\n                    if (this.currentLobby === undefined) // We're not in a lobby, ignore updated packets.\n                    return;\n                    this.currentLobbyInfo = packet.lobbyInfo;\n                    this.network.emit(\"lobbyUpdated\", packet.lobbyInfo.code, packet.lobbyInfo);\n                    break;\n                case \"connect\":\n                    var _this_connections_get1;\n                    if (this.receivedID === packet.id) return; // Skip self\n                    await this.network._addPeer(packet.id, packet.polite);\n                    var _this_replayQueue_get;\n                    for (const p of (_this_replayQueue_get = this.replayQueue.get(packet.id)) !== null && _this_replayQueue_get !== void 0 ? _this_replayQueue_get : [])await ((_this_connections_get1 = this.connections.get(packet.id)) === null || _this_connections_get1 === void 0 ? void 0 : _this_connections_get1._onSignalingMessage(p));\n                    this.replayQueue.delete(packet.id);\n                    break;\n                case \"disconnect\":\n                    var _this_connections_get2;\n                    if (this.connections.has(packet.id)) (_this_connections_get2 = this.connections.get(packet.id)) === null || _this_connections_get2 === void 0 ? void 0 : _this_connections_get2.close();\n                    break;\n                case \"candidate\":\n                case \"description\":\n                    var _this_connections_get3;\n                    if (this.connections.has(packet.source)) await ((_this_connections_get3 = this.connections.get(packet.source)) === null || _this_connections_get3 === void 0 ? void 0 : _this_connections_get3._onSignalingMessage(packet));\n                    else {\n                        var _this_replayQueue_get1;\n                        const queue = (_this_replayQueue_get1 = this.replayQueue.get(packet.source)) !== null && _this_replayQueue_get1 !== void 0 ? _this_replayQueue_get1 : [];\n                        queue.push(packet);\n                        this.replayQueue.set(packet.source, queue);\n                    }\n                    break;\n                case \"credentials\":\n                    this.emit(\"credentials\", packet);\n                    break;\n                case \"ping\":\n                    break;\n            }\n        } catch (e) {\n            const error = new $cd98a826fa8ebb17$export$4299251c42ef608f(\"unknown-error\", e);\n            this.network._onSignalingError(error);\n        }\n    }\n    async event(category, action, data) {\n        return await new Promise((resolve)=>{\n            setTimeout(()=>{\n                this.send({\n                    type: \"event\",\n                    game: this.network.gameID,\n                    lobby: this.currentLobby,\n                    peer: this.network.id,\n                    category: category,\n                    action: action,\n                    data: data\n                });\n                resolve();\n            }, 0);\n        });\n    }\n    constructor(network, peers, url){\n        super();\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"network\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"url\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"ws\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"reconnectAttempt\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"reconnecting\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"receivedID\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"receivedSecret\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"currentLobby\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"currentLobbyInfo\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"currentLeader\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"currentTerm\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"connections\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"replayQueue\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"requests\", void 0);\n        this.network = network;\n        this.reconnectAttempt = 0;\n        this.reconnecting = false;\n        this.currentTerm = 0;\n        this.requests = new Map();\n        this.url = url;\n        this.connections = peers;\n        this.replayQueue = new Map();\n        this.ws = this.connect();\n    }\n}\nclass $cd98a826fa8ebb17$export$4299251c42ef608f {\n    toString() {\n        return `[${this.type}: ${this.message}]`;\n    }\n    /**\n   * @internal\n   */ constructor(type, message, event, code){\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"type\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"message\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"event\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"code\", void 0);\n        this.type = type;\n        this.message = message;\n        this.event = event;\n        this.code = code;\n    }\n}\n\n\n\n\nfunction $bebd8d402e2ab413$var$ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) symbols = symbols.filter(function(sym) {\n            return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n        });\n        keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction $bebd8d402e2ab413$export$71511d61b312f219(target, source) {\n    source = source != null ? source : {};\n    if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    else $bebd8d402e2ab413$var$ownKeys(Object(source)).forEach(function(key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n    return target;\n}\n\n\n\n\nconst $37a4c41865dfc325$var$PingInterval = 500;\nconst $37a4c41865dfc325$var$WindowSampleSize = 50;\nconst $37a4c41865dfc325$var$PING = \"ping\";\nconst $37a4c41865dfc325$var$PONG = \"pong\";\nclass $37a4c41865dfc325$export$2e2bcd8739ae039 {\n    ping() {\n        var _this_control, _this_control1;\n        this.lastPingSentAt = performance.now();\n        if (((_this_control = this.control) === null || _this_control === void 0 ? void 0 : _this_control.readyState) === \"open\") (_this_control1 = this.control) === null || _this_control1 === void 0 ? void 0 : _this_control1.send($37a4c41865dfc325$var$PING);\n    }\n    onMessage(data) {\n        if (data === $37a4c41865dfc325$var$PING) {\n            var _this_control, _this_control1;\n            if (((_this_control = this.control) === null || _this_control === void 0 ? void 0 : _this_control.readyState) === \"open\") (_this_control1 = this.control) === null || _this_control1 === void 0 ? void 0 : _this_control1.send($37a4c41865dfc325$var$PONG);\n            return;\n        }\n        if (data !== $37a4c41865dfc325$var$PONG) return;\n        const now = performance.now();\n        const delta = now - this.lastPingSentAt;\n        this.window.unshift(delta);\n        if (this.window.length > $37a4c41865dfc325$var$WindowSampleSize) this.window.pop();\n        this.last = delta;\n        this.max = Math.max(...this.window);\n        this.min = Math.min(...this.window);\n        this.average = this.window.reduce((a, b)=>a + b, 0) / this.window.length;\n        if (this.window.length > 1) this.jitter = this.window.slice(1).map((x, i)=>Math.abs(x - this.window[i])).reduce((a, b)=>a + b, 0) / (this.window.length - 1);\n        setTimeout(()=>this.ping(), $37a4c41865dfc325$var$PingInterval - delta);\n    }\n    /**\n   * @internal\n   */ constructor(peer, control){\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"peer\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"control\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"window\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"lastPingSentAt\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"last\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"average\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"jitter\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"max\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"min\", void 0);\n        this.peer = peer;\n        this.control = control;\n        this.window = [];\n        this.lastPingSentAt = 0;\n        this.last = 0;\n        this.average = 0;\n        this.jitter = 0;\n        this.max = 0;\n        this.min = 0;\n        if (control !== undefined) {\n            this.ping();\n            control.addEventListener(\"message\", (e)=>this.onMessage(e.data));\n        }\n    }\n}\n\n\nconst $97d421c26790334f$var$LatencyRestartIceThreshold = 1000 // ms\n;\nconst $97d421c26790334f$var$ReconnectionWindow = 8000 // ms\n;\nclass $97d421c26790334f$export$2e2bcd8739ae039 {\n    close(reason) {\n        if (this.closing) return;\n        this.closing = true;\n        // Inform signaling server that the peer has been disconnected:\n        this.signaling.send({\n            type: \"disconnected\",\n            id: this.id,\n            reason: reason !== null && reason !== void 0 ? reason : \"normal closure\"\n        });\n        Object.values(this.channels).forEach((c)=>c.close());\n        this.conn.close();\n        this.network._removePeer(this);\n        if (this.checkStateInterval != null) clearInterval(this.checkStateInterval);\n        if (this.reportLatencyEventTimeout != null) clearTimeout(this.reportLatencyEventTimeout);\n        if (this.opened) {\n            this.network.emit(\"disconnected\", this);\n            this.signaling.event(\"rtc\", \"disconnected\", {\n                target: this.id,\n                reason: reason !== null && reason !== void 0 ? reason : \"\",\n                reconnecting: this.reconnecting ? \"true\" : \"false\"\n            });\n        }\n    }\n    checkState() {\n        const now = performance.now();\n        var _this_conn_connectionState;\n        const connectionState = (_this_conn_connectionState = this.conn.connectionState) !== null && _this_conn_connectionState !== void 0 ? _this_conn_connectionState : this.conn.iceConnectionState;\n        if (this.closing) return;\n        if (!this.opened) {\n            if (connectionState === \"failed\") this.close(\"connecting failed\");\n            return;\n        }\n        if (Object.values(this.channels).some((c)=>c.readyState !== \"open\")) this.close(\"data channel closed\");\n        // console.log('state', this.id, this.conn.connectionState, this.conn.iceConnectionState, Object.values(this.channels).map(c => c.readyState))\n        if (!this.reconnecting && (connectionState === \"disconnected\" || connectionState === \"failed\")) {\n            this.reconnecting = true;\n            this.abortReconnectionAt = now + $97d421c26790334f$var$ReconnectionWindow;\n            this.network.emit(\"reconnecting\", this);\n            this.signaling.event(\"rtc\", \"attempt-reconnect\", {\n                target: this.id\n            });\n        } else if (this.reconnecting && connectionState === \"connected\") {\n            this.reconnecting = false;\n            this.network.emit(\"reconnected\", this);\n            this.signaling.event(\"rtc\", \"attempt-reconnected\", {\n                target: this.id\n            });\n        } else if (this.reconnecting && now > this.abortReconnectionAt) this.close(\"reconnection timed out\");\n        if (!this.reconnecting && \"control\" in this.channels) {\n            const lastPing = this.lastMessageReceivedAt;\n            if (lastPing !== 0) {\n                const delta = now - lastPing;\n                if (delta > $97d421c26790334f$var$LatencyRestartIceThreshold && now > this.allowNextManualRestartIceAt) {\n                    this.allowNextManualRestartIceAt = now + 10000;\n                    this.conn.restartIce();\n                }\n            }\n        }\n    }\n    onError(e) {\n        this.network.emit(\"rtcerror\", e);\n        if (this.network.listenerCount(\"rtcerror\") === 0) console.error(\"rtcerror not handled:\", e);\n        this.checkState();\n        this.signaling.event(\"rtc\", \"error\", {\n            target: this.id,\n            error: JSON.stringify(e)\n        });\n    }\n    /**\n   * @internal\n   */ async _onSignalingMessage(packet) {\n        switch(packet.type){\n            case \"candidate\":\n                if (packet.candidate != null) try {\n                    await this.conn.addIceCandidate(packet.candidate);\n                } catch (e) {\n                    if (!this.ignoreOffer) throw e;\n                }\n                break;\n            case \"description\":\n                {\n                    const { description: description } = packet;\n                    const readyForOffer = !this.makingOffer && (this.conn.signalingState === \"stable\" || this.isSettingRemoteAnswerPending);\n                    const offerCollision = description.type === \"offer\" && !readyForOffer;\n                    this.ignoreOffer = !this.polite && offerCollision;\n                    if (this.ignoreOffer) return;\n                    this.isSettingRemoteAnswerPending = description.type === \"answer\";\n                    await this.conn.setRemoteDescription(description);\n                    this.isSettingRemoteAnswerPending = false;\n                    if (description.type === \"offer\") {\n                        await this.conn.setLocalDescription();\n                        const description = this.conn.localDescription;\n                        if (description != null) {\n                            var _this_testSessionWrapper, _this;\n                            await ((_this_testSessionWrapper = (_this = this).testSessionWrapper) === null || _this_testSessionWrapper === void 0 ? void 0 : _this_testSessionWrapper.call(_this, description, this.config, this.network.id, this.id));\n                            this.signaling.send({\n                                type: \"description\",\n                                source: this.network.id,\n                                recipient: this.id,\n                                description: description\n                            });\n                        }\n                    }\n                }\n                break;\n        }\n    }\n    send(channel, data) {\n        if (!(channel in this.channels)) throw new Error(\"unknown channel \" + channel);\n        const chan = this.channels[channel];\n        if (chan.readyState === \"open\") chan.send(data);\n    }\n    toString() {\n        return `[Peer: ${this.id}]`;\n    }\n    /**\n   * @internal\n   */ constructor(network, signaling, id, config, polite){\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"network\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"signaling\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"id\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"config\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"polite\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"conn\", void 0);\n        // Signaling state:\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"makingOffer\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"ignoreOffer\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"isSettingRemoteAnswerPending\", void 0);\n        // Connection state:\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"opened\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"closing\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"reconnecting\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"abortReconnectionAt\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"allowNextManualRestartIceAt\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"latency\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"lastMessageReceivedAt\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"politenessTimeout\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"reportLatencyEventTimeout\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"checkStateInterval\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"channels\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"testSessionWrapper\", void 0);\n        this.network = network;\n        this.signaling = signaling;\n        this.id = id;\n        this.config = config;\n        this.polite = polite;\n        this.makingOffer = false;\n        this.ignoreOffer = false;\n        this.isSettingRemoteAnswerPending = false;\n        this.opened = false;\n        this.closing = false;\n        this.reconnecting = false;\n        this.abortReconnectionAt = 0;\n        this.allowNextManualRestartIceAt = 0;\n        this.latency = new (0, $37a4c41865dfc325$export$2e2bcd8739ae039)(this);\n        this.lastMessageReceivedAt = 0;\n        this.channels = {};\n        this.network.log(\"creating peer\");\n        this.testSessionWrapper = undefined;\n        this.conn = new RTCPeerConnection(config);\n        if (config.testproxyURL === undefined) this.conn.addEventListener(\"icecandidate\", (e)=>{\n            const candidate = e.candidate;\n            if (candidate !== null) signaling.send({\n                type: \"candidate\",\n                source: this.network.id,\n                recipient: this.id,\n                candidate: candidate\n            });\n        });\n        else this.testSessionWrapper = $97d421c26790334f$var$wrapSessionDescription;\n        this.conn.addEventListener(\"negotiationneeded\", ()=>{\n            this.politenessTimeout = setTimeout(()=>{\n                (async function() {\n                    try {\n                        if (_this.closing) return;\n                        _this.makingOffer = true;\n                        await _this.conn.setLocalDescription();\n                        const description = _this.conn.localDescription;\n                        if (description != null) {\n                            var _this_testSessionWrapper, _this;\n                            await ((_this_testSessionWrapper = (_this = _this).testSessionWrapper) === null || _this_testSessionWrapper === void 0 ? void 0 : _this_testSessionWrapper.call(_this, description, _this.config, _this.network.id, _this.id));\n                            _this.signaling.send({\n                                type: \"description\",\n                                source: _this.network.id,\n                                recipient: _this.id,\n                                description: description\n                            });\n                        }\n                    } catch (e) {\n                        const error = new (0, $cd98a826fa8ebb17$export$4299251c42ef608f)(\"unknown-error\", e);\n                        _this.network._onSignalingError(error);\n                    } finally{\n                        _this.makingOffer = false;\n                    }\n                })().catch((_)=>{\n                    var _this = this;\n                });\n            }, this.polite ? 100 : 0);\n        });\n        this.checkStateInterval = setInterval(()=>{\n            this.checkState();\n        }, 500);\n        this.conn.addEventListener(\"signalingstatechange\", ()=>this.checkState());\n        this.conn.addEventListener(\"connectionstatechange\", ()=>this.checkState());\n        this.conn.addEventListener(\"iceconnectionstatechange\", ()=>this.checkState());\n        this.network.emit(\"connecting\", this);\n        let i = 0;\n        for(const label in this.network.dataChannels){\n            const chan = this.conn.createDataChannel(label, (0, $bebd8d402e2ab413$export$71511d61b312f219)((0, $b22b95c8f829a264$export$71511d61b312f219)({}, this.network.dataChannels[label]), {\n                id: i++,\n                negotiated: true\n            }));\n            chan.binaryType = \"arraybuffer\";\n            chan.addEventListener(\"error\", (e)=>this.onError(e));\n            chan.addEventListener(\"closing\", ()=>this.checkState());\n            chan.addEventListener(\"close\", ()=>this.checkState());\n            chan.addEventListener(\"open\", ()=>{\n                if (!this.opened && !Object.values(this.channels).some((c)=>c.readyState !== \"open\")) {\n                    if (\"control\" in this.channels) this.latency = new (0, $37a4c41865dfc325$export$2e2bcd8739ae039)(this, this.channels.control);\n                    if (this.politenessTimeout !== undefined) clearTimeout(this.politenessTimeout);\n                    this.signaling.send({\n                        type: \"connected\",\n                        id: this.id\n                    });\n                    this.opened = true;\n                    this.network.emit(\"connected\", this);\n                    this.signaling.event(\"rtc\", \"connected\", {\n                        target: this.id\n                    });\n                    this.reportLatencyEventTimeout = setTimeout(()=>{\n                        this.signaling.event(\"rtc\", \"avg-latency-at-10s\", {\n                            target: this.id,\n                            latency: `${this.latency.average}`\n                        });\n                    }, 10000);\n                }\n            });\n            chan.addEventListener(\"message\", (e)=>{\n                this.lastMessageReceivedAt = performance.now();\n                if (label !== \"control\") this.network.emit(\"message\", this, label, e.data);\n            });\n            this.channels[label] = chan;\n        }\n    }\n}\nasync function $97d421c26790334f$var$wrapSessionDescription(desc, config, selfID, otherID) {\n    if (config.testproxyURL === undefined) return;\n    let lines = desc.sdp.split(\"\\r\\n\");\n    lines = lines.filter((l)=>{\n        return !l.startsWith(\"a=candidate\") || l.includes(\"127.0.0.1\") && l.includes(\"udp\");\n    });\n    for(let i = 0; i < lines.length; i++){\n        const l = lines[i];\n        if (l.startsWith(\"a=candidate\") && l.includes(\"127.0.0.1\")) {\n            var _l_split_pop;\n            const orignalPort = (_l_split_pop = l.split(\"127.0.0.1 \").pop()) === null || _l_split_pop === void 0 ? void 0 : _l_split_pop.split(\" \")[0] // find port\n            ;\n            if (orignalPort != null) {\n                const resp = await fetch(`${config.testproxyURL}/create?id=${selfID + otherID}&port=${orignalPort}`);\n                const substitudePort = await resp.text();\n                lines[i] = l.replaceAll(` ${orignalPort} `, ` ${substitudePort} `);\n            }\n        }\n    }\n    desc.sdp = lines.join(\"\\r\\n\");\n}\n\n\n\nclass $32626390439ccfcc$export$2e2bcd8739ae039 extends (0, $54f026ab89254b88$exports.EventEmitter) {\n    async list(filter) {\n        if (this._closing || this.signaling.receivedID === undefined) return [];\n        const filterString = filter != null ? JSON.stringify(filter) : undefined;\n        const reply = await this.signaling.request({\n            type: \"list\",\n            filter: filterString\n        });\n        if (reply.type === \"lobbies\") return reply.lobbies;\n        return [];\n    }\n    async create(settings) {\n        if (this._closing || this.signaling.receivedID === undefined) return \"\";\n        const reply = await this.signaling.request((0, $b22b95c8f829a264$export$71511d61b312f219)({\n            type: \"create\"\n        }, settings));\n        if (reply.type === \"joined\") return reply.lobbyInfo.code;\n        return \"\";\n    }\n    async join(lobby, password) {\n        if (this._closing || this.signaling.receivedID === undefined) return undefined;\n        const reply = await this.signaling.request({\n            type: \"join\",\n            lobby: lobby,\n            password: password\n        });\n        if (reply.type === \"joined\") return reply.lobbyInfo;\n        return undefined;\n    }\n    async setLobbySettings(settings) {\n        if (this._closing || this.signaling.receivedID === undefined) return new Error(\"network is closing or not connected\");\n        await this.signaling.request((0, $b22b95c8f829a264$export$71511d61b312f219)({\n            type: \"lobbyUpdate\"\n        }, settings));\n        return true;\n    }\n    close(reason) {\n        if (this._closing || this.signaling.receivedID === undefined) return;\n        this._closing = true;\n        this.emit(\"close\", reason);\n        if (this.id !== \"\") this.signaling.send({\n            type: \"close\",\n            id: this.id,\n            reason: reason !== null && reason !== void 0 ? reason : \"normal closure\"\n        });\n        this.peers.forEach((peer)=>peer.close(reason));\n        this.signaling.close();\n        if (typeof window !== \"undefined\") window.removeEventListener(\"unload\", this.unloadListener);\n    }\n    send(channel, peerID, data) {\n        var _this_peers_get;\n        if (!(channel in this.dataChannels)) throw new Error(\"unknown channel \" + channel);\n        if (this.peers.has(peerID)) (_this_peers_get = this.peers.get(peerID)) === null || _this_peers_get === void 0 ? void 0 : _this_peers_get.send(channel, data);\n    }\n    broadcast(channel, data) {\n        if (!(channel in this.dataChannels)) throw new Error(\"unknown channel \" + channel);\n        this.peers.forEach((peer)=>peer.send(channel, data));\n    }\n    /**\n   * @internal\n   */ async _addPeer(id, polite) {\n        var _config_iceServers;\n        const config = await this.credentials.fillCredentials(this.rtcConfig);\n        config.iceServers = (_config_iceServers = config.iceServers) === null || _config_iceServers === void 0 ? void 0 : _config_iceServers.filter((server)=>!(server.urls.includes(\"turn:\") && server.username === undefined));\n        const peer = new (0, $97d421c26790334f$export$2e2bcd8739ae039)(this, this.signaling, id, config, polite);\n        this.peers.set(id, peer);\n    }\n    /**\n   * @internal\n   */ _removePeer(peer) {\n        return this.peers.delete(peer.id);\n    }\n    /**\n   * @internal\n   */ _prefetchTURNCredentials() {\n        this.credentials.fillCredentials(this.rtcConfig).catch(()=>{});\n    }\n    /**\n   * @internal\n   */ _onSignalingError(e) {\n        this.emit(\"signalingerror\", e);\n        if (this.listenerCount(\"signalingerror\") === 0) console.error(\"signallingerror not handled:\", e);\n        this.signaling.event(\"signaling\", \"error\", {\n            error: JSON.stringify(e)\n        });\n    }\n    /**\n   * @internal\n   */ _forceReconnectSignaling() {\n        this.signaling.close();\n    }\n    get id() {\n        var _this_signaling_receivedID;\n        return (_this_signaling_receivedID = this.signaling.receivedID) !== null && _this_signaling_receivedID !== void 0 ? _this_signaling_receivedID : \"\";\n    }\n    get closing() {\n        return this._closing;\n    }\n    get size() {\n        return this.peers.size;\n    }\n    get currentLobby() {\n        return this.signaling.currentLobby;\n    }\n    get currentLobbyInfo() {\n        return this.signaling.currentLobbyInfo;\n    }\n    get currentLeader() {\n        return this.signaling.currentLeader;\n    }\n    constructor(gameID, rtcConfig = (0, $3c6f41ed235719d2$export$34c0e73c967be630), signalingURL = (0, $3c6f41ed235719d2$export$f26023e62b577463)){\n        super();\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"gameID\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"rtcConfig\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"_closing\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"peers\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"signaling\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"credentials\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"dataChannels\", void 0);\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"log\", void 0 // console.log\n        );\n        (0, $c991cc2e93d39f4f$export$71511d61b312f219)(this, \"unloadListener\", void 0);\n        this.gameID = gameID;\n        this.rtcConfig = rtcConfig;\n        this._closing = false;\n        this.dataChannels = (0, $3c6f41ed235719d2$export$3e03293f7176f9b3);\n        this.log = (...args)=>{};\n        this.peers = new Map();\n        this.signaling = new (0, $cd98a826fa8ebb17$export$2e2bcd8739ae039)(this, this.peers, signalingURL);\n        this.credentials = new (0, $89c2d705afbd1652$export$2e2bcd8739ae039)(this.signaling);\n        this.unloadListener = ()=>this.close();\n        if (typeof window !== \"undefined\") window.addEventListener(\"unload\", this.unloadListener);\n    }\n}\n\n\nconst $3c6f41ed235719d2$export$f26023e62b577463 = \"wss://netlib.poki.io/v0/signaling\";\nconst $3c6f41ed235719d2$export$34c0e73c967be630 = {\n    iceServers: [\n        {\n            urls: [\n                \"stun:stun.l.google.com:19302\"\n            ]\n        },\n        {\n            urls: (0, $89c2d705afbd1652$export$3be8bbe0727053e5)\n        }\n    ]\n};\nconst $3c6f41ed235719d2$export$3e03293f7176f9b3 = {\n    reliable: {\n        ordered: true\n    },\n    unreliable: {\n        ordered: true,\n        maxRetransmits: 0\n    },\n    control: {\n        ordered: false\n    }\n};\n\n\nconst $9640c045d99e3cc4$var$target = typeof Module !== \"undefined\" ? Module : typeof globalThis !== \"undefined\" ? globalThis : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : typeof $parcel$global !== \"undefined\" ? $parcel$global : {};\n$9640c045d99e3cc4$var$target.netlib = $3c6f41ed235719d2$exports;\n\n})();\n//# sourceMappingURL=legacy.js.map\n","import * as netlib from './index'\n\ndeclare const Module: any\n\nconst target: any =\n  typeof Module !== 'undefined'\n    ? Module\n    : typeof globalThis !== 'undefined'\n      ? globalThis\n      : typeof self !== 'undefined'\n        ? self\n        : typeof window !== 'undefined'\n          ? window\n          : typeof global !== 'undefined'\n            ? global\n            : {}\n\ntarget.netlib = netlib\n","import { PokiTurnMatch } from './credentials'\nimport { PeerConfiguration } from './types'\n\nexport const DefaultSignalingURL = 'wss://netlib.poki.io/v0/signaling'\n\nexport const DefaultRTCConfiguration: PeerConfiguration = {\n  iceServers: [\n    {\n      urls: [\n        'stun:stun.l.google.com:19302'\n      ]\n    },\n    {\n      urls: PokiTurnMatch\n    }\n  ]\n}\n\nexport const DefaultDataChannels: { [label: string]: RTCDataChannelInit } = {\n  reliable: {\n    ordered: true\n  },\n  unreliable: {\n    ordered: true,\n    maxRetransmits: 0\n  },\n  control: {\n    ordered: false\n  }\n}\n\nexport { default as Network } from './network'\n","import Signaling from './signaling'\nimport { CredentialsPacket, PeerConfiguration } from './types'\n\nconst FetchTimeout = 5000\nexport const PokiTurnMatch = 'turn:turn.rtc.poki.com'\n\nexport default class Credentials {\n  private cachedCredentials?: CredentialsPacket\n  private cachedCredentialsExpireAt: number = 0\n\n  private runningPromise?: Promise<CredentialsPacket>\n\n  constructor (public signaling: Signaling) {\n  }\n\n  async fillCredentials (config: PeerConfiguration): Promise<RTCConfiguration> {\n    const cloned = JSON.parse(JSON.stringify(config)) as PeerConfiguration\n\n    if (process.env.NODE_ENV === 'test') {\n      return cloned\n    }\n\n    if (config.testproxyURL !== undefined) {\n      return cloned\n    }\n\n    const hasPokiTurn = cloned.iceServers?.some(s => s.urls === PokiTurnMatch || s.urls.includes(PokiTurnMatch)) ?? false\n    if (!hasPokiTurn || cloned.iceServers === undefined) {\n      return cloned\n    }\n    if (this.runningPromise === undefined) {\n      this.runningPromise = new Promise<CredentialsPacket>((resolve) => {\n        if (this.cachedCredentials != null && this.cachedCredentialsExpireAt > performance.now()) {\n          resolve(this.cachedCredentials)\n          return\n        }\n        void this.signaling.request({\n          type: 'credentials'\n        }).then(credentials => {\n          if (credentials.type === 'credentials') {\n            this.cachedCredentials = credentials\n            this.cachedCredentialsExpireAt = performance.now() + (((credentials.lifetime ?? 0) - 60) * 1000)\n            resolve(credentials)\n          }\n        }).catch(() => {\n          resolve({ type: 'credentials' })\n          this.cachedCredentials = { type: 'credentials' }\n          this.cachedCredentialsExpireAt = performance.now() + FetchTimeout\n        })\n        setTimeout(() => {\n          resolve({ type: 'credentials' })\n          this.cachedCredentials = { type: 'credentials' }\n          this.cachedCredentialsExpireAt = performance.now() + FetchTimeout\n        }, FetchTimeout)\n      })\n    }\n    const credentials = await this.runningPromise\n    this.runningPromise = undefined\n\n    if (credentials.url === undefined) {\n      return cloned\n    }\n\n    cloned.iceServers.forEach(s => {\n      if (s.urls === PokiTurnMatch || s.urls.includes(PokiTurnMatch)) {\n        s.urls = credentials.url ?? ''\n        s.username = credentials.username\n        s.credential = credentials.credential\n      }\n    })\n    return cloned\n  }\n}\n","function _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true });\n    } else obj[key] = value;\n\n    return obj;\n}\nexport { _define_property as _ };\n","import { EventEmitter } from 'eventemitter3'\n\nimport { DefaultDataChannels, DefaultRTCConfiguration, DefaultSignalingURL } from '.'\nimport { LobbyListEntry, LobbySettings, PeerConfiguration } from './types'\nimport Signaling, { SignalingError } from './signaling'\nimport Peer from './peer'\nimport Credentials from './credentials'\n\ninterface NetworkListeners {\n  ready: () => void | Promise<void>\n  lobby: (code: string, lobbyInfo: LobbyListEntry) => void | Promise<void>\n  leader: (leader: string) => void | Promise<void>\n  lobbyUpdated: (code: string, settings: LobbySettings) => void | Promise<void>\n  connecting: (peer: Peer) => void | Promise<void>\n  connected: (peer: Peer) => void | Promise<void>\n  reconnecting: (peer: Peer) => void | Promise<void>\n  reconnected: (peer: Peer) => void | Promise<void>\n  disconnected: (peer: Peer) => void | Promise<void>\n  signalingreconnected: () => void | Promise<void>\n  failed: () => void | Promise<void>\n  message: (peer: Peer, channel: string, data: string | Blob | ArrayBuffer | ArrayBufferView) => void | Promise<void>\n  close: (reason?: string) => void | Promise<void>\n  rtcerror: (e: Event) => void | Promise<void> // TODO: Figure out how to make this e type be RTCErrorEvent\n  signalingerror: (e: SignalingError) => void | Promise<void>\n}\n\nexport default class Network extends EventEmitter<NetworkListeners> {\n  private _closing: boolean = false\n  public readonly peers: Map<string, Peer>\n  private readonly signaling: Signaling\n  private readonly credentials: Credentials\n  public dataChannels: { [label: string]: RTCDataChannelInit } = DefaultDataChannels\n\n  public log: (...data: any[]) => void = (...args: any[]) => {} // console.log\n\n  private readonly unloadListener: () => void\n\n  constructor (public readonly gameID: string, private readonly rtcConfig: PeerConfiguration = DefaultRTCConfiguration, signalingURL: string = DefaultSignalingURL) {\n    super()\n    this.peers = new Map<string, Peer>()\n    this.signaling = new Signaling(this, this.peers, signalingURL)\n    this.credentials = new Credentials(this.signaling)\n\n    this.unloadListener = () => this.close()\n    if (typeof window !== 'undefined') {\n      window.addEventListener('unload', this.unloadListener)\n    }\n  }\n\n  async list (filter?: object): Promise<LobbyListEntry[]> {\n    if (this._closing || this.signaling.receivedID === undefined) {\n      return []\n    }\n    const filterString = (filter != null) ? JSON.stringify(filter) : undefined\n    const reply = await this.signaling.request({\n      type: 'list',\n      filter: filterString\n    })\n    if (reply.type === 'lobbies') {\n      return reply.lobbies\n    }\n    return []\n  }\n\n  async create (settings?: LobbySettings): Promise<string> {\n    if (this._closing || this.signaling.receivedID === undefined) {\n      return ''\n    }\n    const reply = await this.signaling.request({\n      type: 'create',\n      ...settings\n    })\n    if (reply.type === 'joined') {\n      return reply.lobbyInfo.code\n    }\n    return ''\n  }\n\n  async join (lobby: string, password?: string): Promise<LobbyListEntry | undefined> {\n    if (this._closing || this.signaling.receivedID === undefined) {\n      return undefined\n    }\n    const reply = await this.signaling.request({\n      type: 'join',\n      lobby,\n      password\n    })\n    if (reply.type === 'joined') {\n      return reply.lobbyInfo\n    }\n    return undefined\n  }\n\n  async setLobbySettings (settings: LobbySettings): Promise<true | Error> {\n    if (this._closing || this.signaling.receivedID === undefined) {\n      return new Error('network is closing or not connected')\n    }\n    await this.signaling.request({\n      type: 'lobbyUpdate',\n      ...settings\n    })\n    return true\n  }\n\n  close (reason?: string): void {\n    if (this._closing || this.signaling.receivedID === undefined) {\n      return\n    }\n    this._closing = true\n    this.emit('close', reason)\n\n    if (this.id !== '') {\n      this.signaling.send({\n        type: 'close',\n        id: this.id,\n        reason: reason ?? 'normal closure'\n      })\n    }\n\n    this.peers.forEach(peer => peer.close(reason))\n    this.signaling.close()\n\n    if (typeof window !== 'undefined') {\n      window.removeEventListener('unload', this.unloadListener)\n    }\n  }\n\n  send (channel: string, peerID: string, data: string | Blob | ArrayBuffer | ArrayBufferView): void {\n    if (!(channel in this.dataChannels)) {\n      throw new Error('unknown channel ' + channel)\n    }\n    if (this.peers.has(peerID)) {\n      this.peers.get(peerID)?.send(channel, data)\n    }\n  }\n\n  broadcast (channel: string, data: string | Blob | ArrayBuffer | ArrayBufferView): void {\n    if (!(channel in this.dataChannels)) {\n      throw new Error('unknown channel ' + channel)\n    }\n    this.peers.forEach(peer => peer.send(channel, data))\n  }\n\n  /**\n   * @internal\n   */\n  async _addPeer (id: string, polite: boolean): Promise<void> {\n    const config = await this.credentials.fillCredentials(this.rtcConfig)\n\n    config.iceServers = config.iceServers?.filter(server => !(server.urls.includes('turn:') && server.username === undefined))\n\n    const peer = new Peer(this, this.signaling, id, config, polite)\n    this.peers.set(id, peer)\n  }\n\n  /**\n   * @internal\n   */\n  _removePeer (peer: Peer): boolean {\n    return this.peers.delete(peer.id)\n  }\n\n  /**\n   * @internal\n   */\n  _prefetchTURNCredentials (): void {\n    this.credentials.fillCredentials(this.rtcConfig).catch(() => {})\n  }\n\n  /**\n   * @internal\n   */\n  _onSignalingError (e: SignalingError): void {\n    this.emit('signalingerror', e)\n    if (this.listenerCount('signalingerror') === 0) {\n      console.error('signallingerror not handled:', e)\n    }\n    void this.signaling.event('signaling', 'error', { error: JSON.stringify(e) })\n  }\n\n  /**\n   * @internal\n   */\n  _forceReconnectSignaling (): void {\n    this.signaling.close()\n  }\n\n  get id (): string {\n    return this.signaling.receivedID ?? ''\n  }\n\n  get closing (): boolean {\n    return this._closing\n  }\n\n  get size (): number {\n    return this.peers.size\n  }\n\n  get currentLobby (): string | undefined {\n    return this.signaling.currentLobby\n  }\n\n  get currentLobbyInfo (): LobbyListEntry | undefined {\n    return this.signaling.currentLobbyInfo\n  }\n\n  get currentLeader (): string | null | undefined {\n    return this.signaling.currentLeader\n  }\n}\n","import { _ as _define_property } from \"./_define_property.js\";\n\nfunction _object_spread(target) {\n    for (var i = 1; i < arguments.length; i++) {\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(\n                Object.getOwnPropertySymbols(source).filter(function(sym) {\n                    return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n                })\n            );\n        }\n\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n\n    return target;\n}\nexport { _object_spread as _ };\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { EventEmitter } from 'eventemitter3'\nimport Network from './network'\nimport Peer from './peer'\nimport { LobbyListEntry, SignalingPacketTypes } from './types'\n\ninterface SignalingListeners {\n  credentials: (data: SignalingPacketTypes) => void | Promise<void>\n}\n\nexport default class Signaling extends EventEmitter<SignalingListeners> {\n  private readonly url: string\n  private ws: WebSocket\n  private reconnectAttempt: number = 0\n  private reconnecting: boolean = false\n  receivedID?: string\n  receivedSecret?: string\n  currentLobby?: string\n  currentLobbyInfo?: LobbyListEntry\n  currentLeader?: string\n  currentTerm: number = 0\n\n  private readonly connections: Map<string, Peer>\n\n  private readonly replayQueue: Map<string, SignalingPacketTypes[]>\n\n  private readonly requests: Map<string, RequestHandler> = new Map()\n\n  constructor (private readonly network: Network, peers: Map<string, Peer>, url: string) {\n    super()\n\n    this.url = url\n    this.connections = peers\n    this.replayQueue = new Map()\n\n    this.ws = this.connect()\n  }\n\n  private connect (): WebSocket {\n    const ws = new WebSocket(this.url)\n    const onOpen = (): void => {\n      this.reconnectAttempt = 0\n      this.reconnecting = false\n      this.send({\n        type: 'hello',\n        game: this.network.gameID,\n        id: this.receivedID,\n        secret: this.receivedSecret\n      })\n    }\n    const onError = (e: Event): void => {\n      const error = new SignalingError('socket-error', 'unexpected websocket error', e)\n      this.network._onSignalingError(error)\n      if (ws.readyState === WebSocket.CLOSED) {\n        this.reconnecting = false\n        ws.removeEventListener('open', onOpen)\n        ws.removeEventListener('error', onError)\n        ws.removeEventListener('message', onMessage)\n        ws.removeEventListener('close', onClose)\n\n        // Don't try to reconnect too quickly, give the server a chance\n        // to store our disconnection in the db, so when we reconnect\n        // it recognizes us.\n        setTimeout(() => {\n          this.reconnect()\n        }, 100)\n      }\n    }\n    const onMessage = (ev: MessageEvent): void => {\n      this.handleSignalingMessage(ev.data).catch(_ => {})\n    }\n    const onClose = (): void => {\n      if (!this.network.closing) {\n        const error = new SignalingError('socket-error', 'signaling socket closed')\n        this.network._onSignalingError(error)\n      }\n      ws.removeEventListener('open', onOpen)\n      ws.removeEventListener('error', onError)\n      ws.removeEventListener('message', onMessage)\n      ws.removeEventListener('close', onClose)\n\n      // Don't try to reconnect too quickly, give the server a chance\n      // to store our disconnection in the db, so when we reconnect\n      // it recognizes us.\n      setTimeout(() => {\n        this.reconnect()\n      }, 100)\n    }\n    ws.addEventListener('open', onOpen)\n    ws.addEventListener('error', onError)\n    ws.addEventListener('message', onMessage)\n    ws.addEventListener('close', onClose)\n    return ws\n  }\n\n  private reconnect (): void {\n    if (this.reconnecting || this.network.closing) {\n      return\n    }\n\n    this.close()\n\n    this.requests.forEach((r) => r.reject(new SignalingError('socket-error', 'signaling socket closed')))\n    this.requests.clear()\n\n    if (this.reconnectAttempt > 42) {\n      this.network.emit('failed')\n      this.network._onSignalingError(new SignalingError('socket-error', 'giving up on reconnecting to signaling server'))\n      return\n    }\n    void this.event('signaling', 'attempt-reconnect')\n    this.reconnecting = true\n    setTimeout(() => {\n      this.ws = this.connect()\n    }, Math.random() * 100 * this.reconnectAttempt)\n    this.reconnectAttempt += 1\n  }\n\n  close (): void {\n    this.ws.close()\n  }\n\n  async request (packet: SignalingPacketTypes): Promise<SignalingPacketTypes> {\n    return await new Promise<SignalingPacketTypes>((resolve, reject) => {\n      if (this.ws.readyState !== WebSocket.OPEN) {\n        reject(new SignalingError('socket-error', 'signaling socket not open'))\n      }\n      const rid = Math.random().toString(36).slice(2)\n      packet.rid = rid\n      this.network.log('requesting signaling packet:', packet.type)\n      const data = JSON.stringify(packet)\n      this.ws.send(data)\n      this.requests.set(rid, { resolve, reject })\n    })\n  }\n\n  send (packet: SignalingPacketTypes): void {\n    if (this.ws.readyState === WebSocket.OPEN) {\n      this.network.log('sending signaling packet:', packet.type)\n      const data = JSON.stringify(packet)\n      this.ws.send(data)\n    }\n  }\n\n  private async handleSignalingMessage (data: string): Promise<void> {\n    try {\n      const packet = JSON.parse(data) as SignalingPacketTypes\n      this.network.log('signaling packet received:', packet.type)\n      if (packet.rid !== undefined) {\n        const request = this.requests.get(packet.rid)\n        if (request != null) {\n          this.requests.delete(packet.rid)\n          if (packet.type === 'error') {\n            request.reject(new SignalingError('server-error', packet.message, undefined, packet.code))\n          } else {\n            request.resolve(packet)\n          }\n        }\n      }\n      switch (packet.type) {\n        case 'error':\n          {\n            const error = new SignalingError('server-error', packet.message, undefined, packet.code)\n            this.network._onSignalingError(error)\n            if (packet.code === 'missing-recipient' && packet.error?.recipient !== undefined) {\n              const id = packet.error?.recipient\n              if (this.connections.has(id)) {\n                this.network.log('cleaning up missing recipient', id)\n                this.connections.get(id)?.close('missing-recipient')\n              }\n            } else if (packet.code === 'reconnect-failed') {\n              this.network.close('reconnect failed')\n            }\n          }\n          break\n\n        case 'welcome':\n          if (this.receivedID !== undefined) {\n            this.network.log('signaling reconnected')\n            this.network.emit('signalingreconnected')\n            return\n          }\n          if (packet.id === '') {\n            throw new Error('missing id on received welcome packet')\n          }\n          this.receivedID = packet.id\n          this.receivedSecret = packet.secret\n          this.network.emit('ready')\n          this.network._prefetchTURNCredentials()\n          break\n\n        case 'joined':\n          {\n            const code = packet.lobbyInfo.code\n            if (code === '') {\n              throw new Error('missing lobby on received connect packet')\n            }\n            this.currentLobby = code\n            this.currentLeader = packet.lobbyInfo.leader\n            this.currentTerm = packet.lobbyInfo.term\n            this.network.emit('lobby', code, packet.lobbyInfo)\n            if (this.currentLeader !== undefined) {\n              this.network.emit('leader', this.currentLeader)\n            }\n          }\n          break\n\n        case 'leader':\n          if (this.currentLobby === undefined) {\n            // We're not in a lobby, ignore leader packets.\n            return\n          }\n          if (packet.term > this.currentTerm) {\n            this.currentLeader = packet.leader\n            this.currentTerm = packet.term\n            this.network.emit('leader', packet.leader)\n          }\n          break\n\n        case 'lobbyUpdated':\n          if (this.currentLobby === undefined) {\n            // We're not in a lobby, ignore updated packets.\n            return\n          }\n          this.currentLobbyInfo = packet.lobbyInfo\n          this.network.emit('lobbyUpdated', packet.lobbyInfo.code, packet.lobbyInfo)\n          break\n\n        case 'connect':\n          if (this.receivedID === packet.id) {\n            return // Skip self\n          }\n          await this.network._addPeer(packet.id, packet.polite)\n          for (const p of this.replayQueue.get(packet.id) ?? []) {\n            await this.connections.get(packet.id)?._onSignalingMessage(p)\n          }\n          this.replayQueue.delete(packet.id)\n          break\n        case 'disconnect':\n          if (this.connections.has(packet.id)) {\n            this.connections.get(packet.id)?.close()\n          }\n          break\n\n        case 'candidate':\n        case 'description':\n          if (this.connections.has(packet.source)) {\n            await this.connections.get(packet.source)?._onSignalingMessage(packet)\n          } else {\n            const queue = this.replayQueue.get(packet.source) ?? []\n            queue.push(packet)\n            this.replayQueue.set(packet.source, queue)\n          }\n          break\n        case 'credentials':\n          this.emit('credentials', packet)\n          break\n        case 'ping':\n          break\n      }\n    } catch (e) {\n      const error = new SignalingError('unknown-error', e as string)\n      this.network._onSignalingError(error)\n    }\n  }\n\n  async event (category: string, action: string, data?: { [key: string]: string }): Promise<void> {\n    return await new Promise(resolve => {\n      setTimeout(() => {\n        this.send({\n          type: 'event',\n          game: this.network.gameID,\n          lobby: this.currentLobby,\n          peer: this.network.id,\n          category,\n          action,\n          data\n        })\n        resolve()\n      }, 0)\n    })\n  }\n}\n\ninterface RequestHandler {\n  resolve: (data: SignalingPacketTypes) => void\n  reject: (reason?: any) => void\n}\n\nexport class SignalingError {\n  /**\n   * @internal\n   */\n  constructor (public type: 'unknown-error' | 'socket-error' | 'server-error', public message: string, public event?: Event, public code?: string) {\n  }\n\n  public toString (): string {\n    return `[${this.type}: ${this.message}]`\n  }\n}\n","import Network from './network'\nimport Signaling, { SignalingError } from './signaling'\nimport Latency from './latency'\nimport { PeerConfiguration, SignalingPacketTypes } from './types'\n\nconst LatencyRestartIceThreshold = 1000 // ms\nconst ReconnectionWindow = 8000 // ms\n\nexport default class Peer {\n  public readonly conn: RTCPeerConnection\n\n  // Signaling state:\n  private makingOffer: boolean = false\n  private ignoreOffer: boolean = false\n  private isSettingRemoteAnswerPending: boolean = false\n\n  // Connection state:\n  private opened: boolean = false\n  private closing: boolean = false\n  private reconnecting: boolean = false\n  private abortReconnectionAt: number = 0\n  private allowNextManualRestartIceAt: number = 0\n\n  public latency: Latency = new Latency(this)\n  private lastMessageReceivedAt: number = 0\n\n  private politenessTimeout?: ReturnType<typeof setTimeout>\n  private reportLatencyEventTimeout?: ReturnType<typeof setTimeout>\n  private readonly checkStateInterval: ReturnType<typeof setInterval>\n  private readonly channels: { [name: string]: RTCDataChannel }\n\n  private readonly testSessionWrapper?: (desc: RTCSessionDescription, config: PeerConfiguration, selfID: string, otherID: string) => Promise<void>\n\n  /**\n   * @internal\n   */\n  constructor (private readonly network: Network, private readonly signaling: Signaling, public readonly id: string, public readonly config: PeerConfiguration, private readonly polite: boolean) {\n    this.channels = {}\n    this.network.log('creating peer')\n\n    this.testSessionWrapper = undefined\n\n    this.conn = new RTCPeerConnection(config)\n    if (config.testproxyURL === undefined) { // we dont push candidates in a test setup\n      this.conn.addEventListener('icecandidate', e => {\n        const candidate = e.candidate\n        if (candidate !== null) {\n          signaling.send({\n            type: 'candidate',\n            source: this.network.id,\n            recipient: this.id,\n            candidate\n          })\n        }\n      })\n    } else {\n      this.testSessionWrapper = wrapSessionDescription\n    }\n    this.conn.addEventListener('negotiationneeded', () => {\n      this.politenessTimeout = setTimeout(() => {\n        (async () => {\n          try {\n            if (this.closing) {\n              return\n            }\n            this.makingOffer = true\n            if (process.env.NODE_ENV === 'test') {\n              // Running tests with node and the wrtc package causes the\n              // setLocalDescription to fail with undefined as argment.\n              await this.conn.setLocalDescription(await this.conn.createOffer())\n            } else {\n              await this.conn.setLocalDescription()\n            }\n            const description = this.conn.localDescription\n            if (description != null) {\n              await this.testSessionWrapper?.(description, this.config, this.network.id, this.id)\n              this.signaling.send({\n                type: 'description',\n                source: this.network.id,\n                recipient: this.id,\n                description\n              })\n            }\n          } catch (e) {\n            const error = new SignalingError('unknown-error', e as string)\n            this.network._onSignalingError(error)\n          } finally {\n            this.makingOffer = false\n          }\n        })().catch(_ => {})\n      }, this.polite ? 100 : 0)\n    })\n\n    this.checkStateInterval = setInterval(() => {\n      this.checkState()\n    }, 500)\n    this.conn.addEventListener('signalingstatechange', () => this.checkState())\n    this.conn.addEventListener('connectionstatechange', () => this.checkState())\n    this.conn.addEventListener('iceconnectionstatechange', () => this.checkState())\n\n    this.network.emit('connecting', this)\n\n    let i = 0\n    for (const label in this.network.dataChannels) {\n      const chan = this.conn.createDataChannel(label, {\n        ...this.network.dataChannels[label],\n        id: i++,\n        negotiated: true\n      })\n      chan.binaryType = 'arraybuffer'\n      chan.addEventListener('error', e => this.onError(e))\n      chan.addEventListener('closing', () => this.checkState())\n      chan.addEventListener('close', () => this.checkState())\n      chan.addEventListener('open', () => {\n        if (!this.opened && !Object.values(this.channels).some(c => c.readyState !== 'open')) {\n          if ('control' in this.channels) {\n            this.latency = new Latency(this, this.channels.control)\n          }\n\n          if (this.politenessTimeout !== undefined) {\n            clearTimeout(this.politenessTimeout)\n          }\n\n          this.signaling.send({\n            type: 'connected',\n            id: this.id\n          })\n          this.opened = true\n          this.network.emit('connected', this)\n          void this.signaling.event('rtc', 'connected', { target: this.id })\n          this.reportLatencyEventTimeout = setTimeout(() => {\n            void this.signaling.event('rtc', 'avg-latency-at-10s', { target: this.id, latency: `${this.latency.average}` })\n          }, 10000)\n        }\n      })\n      chan.addEventListener('message', e => {\n        this.lastMessageReceivedAt = performance.now()\n        if (label !== 'control') {\n          this.network.emit('message', this, label, e.data)\n        }\n      })\n      this.channels[label] = chan\n    }\n  }\n\n  public close (reason?: string): void {\n    if (this.closing) {\n      return\n    }\n    this.closing = true\n\n    // Inform signaling server that the peer has been disconnected:\n    this.signaling.send({\n      type: 'disconnected',\n      id: this.id,\n      reason: reason ?? 'normal closure'\n    })\n\n    Object.values(this.channels).forEach(c => c.close())\n    this.conn.close()\n    this.network._removePeer(this)\n    if (this.checkStateInterval != null) {\n      clearInterval(this.checkStateInterval)\n    }\n    if (this.reportLatencyEventTimeout != null) {\n      clearTimeout(this.reportLatencyEventTimeout)\n    }\n\n    if (this.opened) {\n      this.network.emit('disconnected', this)\n      void this.signaling.event('rtc', 'disconnected', {\n        target: this.id,\n        reason: reason ?? '',\n        reconnecting: this.reconnecting ? 'true' : 'false'\n      })\n    }\n  }\n\n  private checkState (): void {\n    const now = performance.now()\n    const connectionState = this.conn.connectionState ?? this.conn.iceConnectionState\n    if (this.closing) {\n      return\n    }\n    if (!this.opened) {\n      if (connectionState === 'failed') {\n        this.close('connecting failed')\n      }\n      return\n    }\n    if (Object.values(this.channels).some(c => c.readyState !== 'open')) {\n      this.close('data channel closed')\n    }\n    // console.log('state', this.id, this.conn.connectionState, this.conn.iceConnectionState, Object.values(this.channels).map(c => c.readyState))\n    if (!this.reconnecting && (connectionState === 'disconnected' || connectionState === 'failed')) {\n      this.reconnecting = true\n      this.abortReconnectionAt = now + ReconnectionWindow\n      this.network.emit('reconnecting', this)\n      void this.signaling.event('rtc', 'attempt-reconnect', { target: this.id })\n    } else if (this.reconnecting && connectionState === 'connected') {\n      this.reconnecting = false\n      this.network.emit('reconnected', this)\n      void this.signaling.event('rtc', 'attempt-reconnected', { target: this.id })\n    } else if (this.reconnecting && now > this.abortReconnectionAt) {\n      this.close('reconnection timed out')\n    }\n    if (!this.reconnecting && 'control' in this.channels) {\n      const lastPing = this.lastMessageReceivedAt\n      if (lastPing !== 0) {\n        const delta = now - lastPing\n        if (delta > LatencyRestartIceThreshold && now > this.allowNextManualRestartIceAt) {\n          this.allowNextManualRestartIceAt = now + 10000\n          this.conn.restartIce()\n        }\n      }\n    }\n  }\n\n  private onError (e: Event): void {\n    this.network.emit('rtcerror', e)\n    if (this.network.listenerCount('rtcerror') === 0) {\n      console.error('rtcerror not handled:', e)\n    }\n    this.checkState()\n    void this.signaling.event('rtc', 'error', { target: this.id, error: JSON.stringify(e) })\n  }\n\n  /**\n   * @internal\n   */\n  async _onSignalingMessage (packet: SignalingPacketTypes): Promise<void> {\n    switch (packet.type) {\n      case 'candidate':\n        if (packet.candidate != null) {\n          try {\n            await this.conn.addIceCandidate(packet.candidate)\n          } catch (e) {\n            if (!this.ignoreOffer) {\n              throw e\n            }\n          }\n        }\n        break\n\n      case 'description':\n        {\n          const { description } = packet\n          const readyForOffer =\n            !this.makingOffer &&\n            (this.conn.signalingState === 'stable' || this.isSettingRemoteAnswerPending)\n          const offerCollision = description.type === 'offer' && !readyForOffer\n\n          this.ignoreOffer = !this.polite && offerCollision\n          if (this.ignoreOffer) {\n            return\n          }\n          this.isSettingRemoteAnswerPending = description.type === 'answer'\n          await this.conn.setRemoteDescription(description)\n          this.isSettingRemoteAnswerPending = false\n          if (description.type === 'offer') {\n            if (process.env.NODE_ENV === 'test') {\n              await this.conn.setLocalDescription(await this.conn.createAnswer())\n            } else {\n              await this.conn.setLocalDescription()\n            }\n            const description = this.conn.localDescription\n            if (description != null) {\n              await this.testSessionWrapper?.(description, this.config, this.network.id, this.id)\n              this.signaling.send({\n                type: 'description',\n                source: this.network.id,\n                recipient: this.id,\n                description\n              })\n            }\n          }\n        }\n        break\n    }\n  }\n\n  send (channel: string, data: string | Blob | ArrayBuffer | ArrayBufferView): void {\n    if (!(channel in this.channels)) {\n      throw new Error('unknown channel ' + channel)\n    }\n    const chan = this.channels[channel]\n    if (chan.readyState === 'open') {\n      chan.send(data as any)\n    }\n  }\n\n  toString (): string {\n    return `[Peer: ${this.id}]`\n  }\n}\n\nasync function wrapSessionDescription (desc: RTCSessionDescription, config: PeerConfiguration, selfID: string, otherID: string): Promise<void> {\n  if (config.testproxyURL === undefined) {\n    return\n  }\n\n  let lines = desc.sdp.split('\\r\\n')\n  lines = lines.filter(l => {\n    return !l.startsWith('a=candidate') || (l.includes('127.0.0.1') && l.includes('udp'))\n  })\n\n  for (let i = 0; i < lines.length; i++) {\n    const l = lines[i]\n    if (l.startsWith('a=candidate') && l.includes('127.0.0.1')) {\n      const orignalPort = l.split('127.0.0.1 ').pop()?.split(' ')[0] // find port\n      if (orignalPort != null) {\n        const resp = await fetch(`${config.testproxyURL}/create?id=${selfID + otherID}&port=${orignalPort}`)\n        const substitudePort = await resp.text()\n        lines[i] = l.replaceAll(` ${orignalPort} `, ` ${substitudePort} `)\n      }\n    }\n  }\n\n  ;(desc as any).sdp = lines.join('\\r\\n')\n}\n","function ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n        keys.push.apply(keys, symbols);\n    }\n\n    return keys;\n}\nfunction _object_spread_props(target, source) {\n    source = source != null ? source : {};\n\n    if (Object.getOwnPropertyDescriptors) Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    else {\n        ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n\n    return target;\n}\nexport { _object_spread_props as _ };\n","import Peer from './peer'\n\nconst PingInterval = 500\nconst WindowSampleSize = 50\n\nconst PING = 'ping'\nconst PONG = 'pong'\n\nexport default class Latency {\n  private readonly window: number[] = []\n  private lastPingSentAt: number = 0\n\n  public last: number = 0\n  public average: number = 0\n  public jitter: number = 0\n  public max: number = 0\n  public min: number = 0\n\n  /**\n   * @internal\n   */\n  constructor (private readonly peer: Peer, private readonly control?: RTCDataChannel) {\n    if (control !== undefined) {\n      this.ping()\n\n      control.addEventListener('message', e => this.onMessage(e.data))\n    }\n  }\n\n  private ping (): void {\n    this.lastPingSentAt = performance.now()\n    if (this.control?.readyState === 'open') {\n      this.control?.send(PING)\n    }\n  }\n\n  private onMessage (data: string): void {\n    if (data === PING) {\n      if (this.control?.readyState === 'open') {\n        this.control?.send(PONG)\n      }\n      return\n    }\n    if (data !== PONG) {\n      return\n    }\n\n    const now = performance.now()\n    const delta = now - this.lastPingSentAt\n\n    this.window.unshift(delta)\n    if (this.window.length > WindowSampleSize) {\n      this.window.pop()\n    }\n\n    this.last = delta\n    this.max = Math.max(...this.window)\n    this.min = Math.min(...this.window)\n\n    this.average = this.window.reduce((a, b) => a + b, 0) / this.window.length\n\n    if (this.window.length > 1) {\n      this.jitter = this.window.slice(1).map((x, i) => Math.abs(x - this.window[i])).reduce((a, b) => a + b, 0) / (this.window.length - 1)\n    }\n\n    setTimeout(() => this.ping(), PingInterval - delta)\n  }\n}\n"],"names":["$parcel$global","globalThis","self","window","global","$parcel$export","e","n","v","s","Object","defineProperty","get","set","enumerable","configurable","$3c6f41ed235719d2$exports","$c991cc2e93d39f4f$export$71511d61b312f219","obj","key","value","writable","$3c6f41ed235719d2$export$f26023e62b577463","$3c6f41ed235719d2$export$34c0e73c967be630","$3c6f41ed235719d2$export$3e03293f7176f9b3","$32626390439ccfcc$export$2e2bcd8739ae039","$89c2d705afbd1652$export$3be8bbe0727053e5","$89c2d705afbd1652$export$2e2bcd8739ae039","fillCredentials","config","_cloned_iceServers","_cloned_iceServers_some","cloned","JSON","parse","stringify","undefined","testproxyURL","iceServers","some","urls","includes","runningPromise","Promise","resolve","cachedCredentials","cachedCredentialsExpireAt","performance","now","signaling","request","type","then","credentials","_credentials_lifetime","lifetime","catch","setTimeout","url","forEach","_credentials_url","username","credential","constructor","$b22b95c8f829a264$export$71511d61b312f219","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","$54f026ab89254b88$exports","$54f026ab89254b88$var$has","prototype","hasOwnProperty","$54f026ab89254b88$var$prefix","$54f026ab89254b88$var$Events","$54f026ab89254b88$var$EE","fn","context","once","$54f026ab89254b88$var$addListener","emitter","event","TypeError","listener","evt","_events","push","_eventsCount","$54f026ab89254b88$var$clearEvent","$54f026ab89254b88$var$EventEmitter","create","__proto__","eventNames","events","name","names","call","slice","listeners","handlers","l","ee","Array","listenerCount","emit","a1","a2","a3","a4","a5","args","len","removeListener","apply","j","on","removeAllListeners","off","addListener","prefixed","EventEmitter","$cd98a826fa8ebb17$export$2e2bcd8739ae039","connect","ws","WebSocket","onOpen","reconnectAttempt","reconnecting","send","game","network","gameID","id","receivedID","secret","receivedSecret","onError","error","$cd98a826fa8ebb17$export$4299251c42ef608f","_onSignalingError","readyState","CLOSED","removeEventListener","onMessage","onClose","reconnect","ev","handleSignalingMessage","data","_","closing","addEventListener","close","requests","r","reject","clear","Math","random","packet","OPEN","rid","toString","log","_packet_error","_packet_error1","_this_connections_get","_this_connections_get1","_this_replayQueue_get","_this_connections_get2","_this_connections_get3","_this_replayQueue_get1","delete","message","code","recipient","connections","has","Error","_prefetchTURNCredentials","lobbyInfo","currentLobby","currentLeader","leader","currentTerm","term","currentLobbyInfo","p","_addPeer","polite","replayQueue","_onSignalingMessage","queue","category","action","lobby","peer","peers","Map","$37a4c41865dfc325$var$PING","$37a4c41865dfc325$var$PONG","$37a4c41865dfc325$export$2e2bcd8739ae039","ping","_this_control","_this_control1","lastPingSentAt","control","delta","unshift","pop","last","max","min","average","reduce","a","b","jitter","map","x","abs","$37a4c41865dfc325$var$PingInterval","$97d421c26790334f$export$2e2bcd8739ae039","reason","values","channels","c","conn","_removePeer","checkStateInterval","clearInterval","reportLatencyEventTimeout","clearTimeout","opened","checkState","_this_conn_connectionState","connectionState","iceConnectionState","abortReconnectionAt","lastPing","lastMessageReceivedAt","allowNextManualRestartIceAt","restartIce","console","candidate","addIceCandidate","ignoreOffer","description","readyForOffer","makingOffer","signalingState","isSettingRemoteAnswerPending","offerCollision","setRemoteDescription","setLocalDescription","localDescription","_this_testSessionWrapper","testSessionWrapper","channel","chan","latency","RTCPeerConnection","$97d421c26790334f$var$wrapSessionDescription","politenessTimeout","_this","setInterval","label","dataChannels","createDataChannel","getOwnPropertyDescriptors","defineProperties","$bebd8d402e2ab413$var$ownKeys","object","enumerableOnly","symbols","negotiated","binaryType","desc","selfID","otherID","lines","sdp","split","startsWith","_l_split_pop","orignalPort","resp","fetch","substitudePort","text","replaceAll","join","list","_closing","filterString","reply","lobbies","settings","password","setLobbySettings","unloadListener","peerID","_this_peers_get","broadcast","_config_iceServers","rtcConfig","server","_forceReconnectSignaling","_this_signaling_receivedID","size","signalingURL","reliable","ordered","unreliable","maxRetransmits","$9640c045d99e3cc4$var$target","Module","netlib"],"version":3,"file":"legacy.js.map"}